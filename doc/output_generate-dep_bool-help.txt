============help text in doc/Configure.help:==============
CONTROL6_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

6Control is a BASIC-like scripting language which you can use
to freely program your Ethersex.  It supports threading etc.
and it's probably far easier to do simple control task with it
than implementing these in C code.

See control6/control6.src to get an impression of the language,
e.g. example code.  There are more examples in the Ethersex wiki
at http://ethersex.de/index.php/Control6
==========================================================
CONTROL6_SUPPORT: control6 scripts (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CPU_SLEEP: Use CPU sleep (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (ARCH_AVR)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
BOOTLOADER_SUPPORT:


 enable ethersex TFTP bootloader support

 Depends on TFTP to upload new firmware and the chip,
 is only possible to use on chips with 64k or 128k of flash

 This Bootloader Need 4096 Words (8k Bytes) Flash on the end of the chip

 This is Only a Bootloader, not a normaly image
==========================================================
BOOTLOADER_SUPPORT: Build a bootloader
  Provides for:
   * Write BOOTP data to EEPROM (BOOTP_TO_EEPROM_SUPPORT)
  Depends on: 
   *  (n)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SPI_TIMEOUT: Use SPI Timeout
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
USART_SPI_SUPPORT: Use Usart in SPI Mode
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SOFT_SPI_SUPPORT: Use Software-SPI
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
DEBUG:

Enable serial-line debugging capability of Ethersex firmware.
Moreover this includes an ECMD interface if the ECMD parser is
enabled.

If you enable this you either want to add some debug_printf
instructions here and there in the firmware source code or enable
some of the pre-defined debugging-categories, see submenu.
==========================================================
DEBUG: Enable Debugging
  Provides for:
   * Software Uart (Output only) (SOFT_UART_SUPPORT)
   * VFS EEPROM (VFS_EEPROM_DEBUG_SUPPORT)
   * Perform RAM Test on startup (SER_RAM_23K256_RAMTEST)
   * DC3840 UDP Debug (DC3840_UDP_DEBUG)
  Depends on: 
   * << nothing >> (y)


============help text in doc/Configure.help:==============
DEBUG_USE_SYSLOG:

Depends on:
 * SYSLOG support (SYSLOG_SUPPORT)
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_USE_SYSLOG: Use SYSLOG instead UART
  Provides for:
  Depends on: 
   * SYSLOG support (SYSLOG_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SOFT_UART_SUPPORT: Software Uart (Output only)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_HOOK: Hooks
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_RESET_REASON: Reset Reason
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
RFM12_RAW_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)
 * Router support (enable several network interfaces!) (ROUTER_SUPPORT)

Forward raw data (sent to UDP port 16962, i.e. 0x4242) to RFM12.

Every packet received on RFM12 is passed back to the sender of the UDP
packet, for about half a second after reception of the initial UDP packet.
==========================================================
RFM12_RAW_SUPPORT: RFM12 raw
  Provides for:
  Depends on: 
   * IP over RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)
   * Router support (enable several network interfaces!) (ROUTER_SUPPORT)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
ZBUS_RAW_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * ZBus Support (ZBUS_SUPPORT)
 * Router support (enable several network interfaces!) (ROUTER_SUPPORT)

Forward raw data (sent to UDP port 16963, i.e. 0x4243) to ZBUS.

Every packet received on ZBus is passed back to the sender of the UDP
packet, for about half a second after reception of the initial UDP packet.
==========================================================
ZBUS_RAW_SUPPORT: ZBUS raw
  Provides for:
  Depends on: 
   * ZBus Support (ZBUS_SUPPORT)
   * Router support (enable several network interfaces!) (ROUTER_SUPPORT)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
IPV6_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

 Enable IPv6 networking instead of IPv4.
==========================================================
IPV6_SUPPORT: IPv6 support
  Provides for:
   * Static IPv6 configuration (IPV6_STATIC_SUPPORT)
   * Static IPv6 configuration (IPV6_STATIC_SUPPORT)
  Depends on: 
   *  (UIP_SUPPORT)


============help text in doc/Configure.help:==============
IP_FORWARDING_SUPPORT:

Depends on:
 * Router support (enable several network interfaces!) (ROUTER_SUPPORT)

Forward IP packets between several interfaces, e.g. from USB to RFM12,
Ethernet to RFM12, etc.
==========================================================
IP_FORWARDING_SUPPORT: Enable IP forwarding
  Provides for:
  Depends on: 
   * Router support (enable several network interfaces!) (ROUTER_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
UIP_TIMEOUT_SUPPORT: Enable TCP inactivity timeout
  Provides for:
  Depends on: 
   *  (UIP_SUPPORT)


============help text in doc/Configure.help:==============
BOOTP_SUPPORT:

Depends on:
 * UDP broadcast support (BROADCAST_SUPPORT)
 * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
 * IPv4 support (IPV4_SUPPORT)

IPv4 address autoconfiguration, a la DHCP.

Most DHCP servers support BOOTP as DHCP's predecessor.
Mind that in dnsmasq you have to enable 'bootp-dynamic' in the
configuration file.
==========================================================
BOOTP_SUPPORT: BOOTP (DHCP-like) support
  Provides for:
   * Write BOOTP data to EEPROM (BOOTP_TO_EEPROM_SUPPORT)
  Depends on: 
   *  (n)


============help text in doc/Configure.help:==============
BOOTP_SUPPORT:

Depends on:
 * UDP broadcast support (BROADCAST_SUPPORT)
 * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
 * IPv4 support (IPV4_SUPPORT)

IPv4 address autoconfiguration, a la DHCP.

Most DHCP servers support BOOTP as DHCP's predecessor.
Mind that in dnsmasq you have to enable 'bootp-dynamic' in the
configuration file.
==========================================================
BOOTP_SUPPORT: BOOTP (DHCP-like) support
  Provides for:
   * Write BOOTP data to EEPROM (BOOTP_TO_EEPROM_SUPPORT)
  Depends on: 
   * UDP broadcast support (BROADCAST_SUPPORT)
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * IPv4 support (IPV4_SUPPORT)


============help text in doc/Configure.help:==============
BOOTP_TO_EEPROM_SUPPORT:

Depends on:
 * Build a bootloader (BOOTLOADER_SUPPORT)
 * BOOTP support (BOOTP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
BOOTP_TO_EEPROM_SUPPORT: Write BOOTP data to EEPROM
  Provides for:
  Depends on: 
   * Build a bootloader (BOOTLOADER_SUPPORT)
   * BOOTP (DHCP-like) support (BOOTP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DHCP_SUPPORT: DHCP support
  Provides for:
  Depends on: 
   *  (n)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DHCP_SUPPORT: DHCP support
  Provides for:
  Depends on: 
   * UDP broadcast support (BROADCAST_SUPPORT)
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * IPv4 support (IPV4_SUPPORT)


============help text in doc/Configure.help:==============
OPENVPN_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Enable OpenVPN server.

It currenly supports only symmetric ciphers (e.g. Cast5).

For details on configuration see
http://ethersex.de/tiki-index.php?page=EtherSexNetworkOpenVpn
==========================================================
OPENVPN_SUPPORT: OpenVPN
  Provides for:
   * Static OpenVPN Remote (OPENVPN_STATIC_REMOTE)
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
OPENVPN_STATIC_REMOTE: Static OpenVPN Remote
  Provides for:
  Depends on: 
   * OpenVPN (OPENVPN_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_NET:

Depends on:
 * ENC28J60 (DEBUG_ENC28J60)

There's unfortunately no help available for this item.
==========================================================
DEBUG_NET: Networking
  Provides for:
   * Unknown packets (DEBUG_UNKNOWN_PACKETS)
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_NET_CONFIG:

Depends on:
 * Networking (DEBUG_NET)

There's unfortunately no help available for this item.
==========================================================
DEBUG_NET_CONFIG: Config
  Provides for:
  Depends on: 
   * Networking (DEBUG_NET)


============help text in doc/Configure.help:==============
DEBUG_NET_IP6:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_NET_IP6: IPv6
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_OPENVPN:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_OPENVPN: OpenVPN
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ROUTER:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ROUTER: Router
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_UIP:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_UIP: uIP
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_NTP: NTP
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_UNKNOWN_PACKETS:

Depends on:
 * Networking (DEBUG_NET)

There's unfortunately no help available for this item.
==========================================================
DEBUG_UNKNOWN_PACKETS: Unknown packets
  Provides for:
  Depends on: 
   * Networking (DEBUG_NET)


============help text in doc/Configure.help:==============
NAMED_PIN_SUPPORT:

Enable Named-Pin support, i.e. hardware-pin abstraction.

This way you can assign a human-readable name to a physical pin.  This
can be used together with ecmd, e.g.

  pin get NAME                -- to read NAME
  pin set NAME STATUS         -- to set the pin NAME to STATUS (on/off)
  pin toggle NAME             -- to toggle the pin NAME

The Configuration files must be located in pinning/named_pin to make them
selectable.
==========================================================
NAMED_PIN_SUPPORT: Named and logic state I/O
  Provides for:
   * Inline Named Pin (NAMED_PIN_INLINE_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLEDS: Status LEDs
  Provides for:
   * Status LED (Power) (STATUSLED_POWER_SUPPORT)
   * Status LED (Booted) (STATUSLED_BOOTED_SUPPORT)
   * Status LED (Net link) (STATUSLED_NETLINK_SUPPORT)
   * Status LED (Transmitted) (STATUSLED_TX_SUPPORT)
   * Status LED (Received) (STATUSLED_RX_SUPPORT)
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_POWER_SUPPORT: Status LED (Power)
  Provides for:
  Depends on: 
   * Status LEDs (STATUSLEDS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_BOOTED_SUPPORT: Status LED (Booted)
  Provides for:
  Depends on: 
   * Status LEDs (STATUSLEDS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_NETLINK_SUPPORT: Status LED (Net link)
  Provides for:
  Depends on: 
   * Status LEDs (STATUSLEDS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_TX_SUPPORT: Status LED (Transmitted)
  Provides for:
   * RFM12 TX (STATUSLED_RFM12_TX_SUPPORT)
   * ZBUS TX (STATUSLED_ZBUS_TX_SUPPORT)
   * IRMP TX (STATUSLED_IRMP_TX_SUPPORT)
  Depends on: 
   * Status LEDs (STATUSLEDS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_RFM12_TX_SUPPORT: RFM12 TX
  Provides for:
  Depends on: 
   * Status LED (Transmitted) (STATUSLED_TX_SUPPORT)
   *  (RFM12_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_ZBUS_TX_SUPPORT: ZBUS TX
  Provides for:
  Depends on: 
   * Status LED (Transmitted) (STATUSLED_TX_SUPPORT)
   * ZBus Support (ZBUS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_IRMP_TX_SUPPORT: IRMP TX
  Provides for:
  Depends on: 
   * Status LED (Transmitted) (STATUSLED_TX_SUPPORT)
   * Send IR-codes (IRMP_TX_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_RX_SUPPORT: Status LED (Received)
  Provides for:
   * RFM12 RX (STATUSLED_RFM12_RX_SUPPORT)
   * ZBUS RX (STATUSLED_ZBUS_RX_SUPPORT)
   * IRMP RX (STATUSLED_IRMP_RX_SUPPORT)
  Depends on: 
   * Status LEDs (STATUSLEDS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_RFM12_RX_SUPPORT: RFM12 RX
  Provides for:
  Depends on: 
   * Status LED (Received) (STATUSLED_RX_SUPPORT)
   *  (RFM12_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_ZBUS_RX_SUPPORT: ZBUS RX
  Provides for:
  Depends on: 
   * Status LED (Received) (STATUSLED_RX_SUPPORT)
   * ZBus Support (ZBUS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_IRMP_RX_SUPPORT: IRMP RX
  Provides for:
  Depends on: 
   * Status LED (Received) (STATUSLED_RX_SUPPORT)
   * Receive IR-codes (IRMP_RX_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_HB_ACT_SUPPORT: Heartbeat / Activity LED
  Provides for:
   * Heartbeat (STATUSLED_HEARTBEAT_SUPPORT)
   * RFM12 TX Activity (STATUSLED_RFM12_TX_ACT_SUPPORT)
   * RFM12 RX Activity (STATUSLED_RFM12_RX_ACT_SUPPORT)
   * ZBUS TX Activity (STATUSLED_ZBUS_TX_ACT_SUPPORT)
   * ZBUS RX Activity (STATUSLED_ZBUS_RX_ACT_SUPPORT)
   * ECMD Activity (STATUSLED_ECMD_ACT_SUPPORT)
  Depends on: 
   * Status LEDs (STATUSLEDS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_HEARTBEAT_SUPPORT: Heartbeat
  Provides for:
  Depends on: 
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_RFM12_TX_ACT_SUPPORT: RFM12 TX Activity
  Provides for:
  Depends on: 
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)
   *  (RFM12_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_RFM12_RX_ACT_SUPPORT: RFM12 RX Activity
  Provides for:
  Depends on: 
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)
   *  (RFM12_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_ZBUS_TX_ACT_SUPPORT: ZBUS TX Activity
  Provides for:
  Depends on: 
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)
   * ZBus Support (ZBUS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_ZBUS_RX_ACT_SUPPORT: ZBUS RX Activity
  Provides for:
  Depends on: 
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)
   * ZBus Support (ZBUS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STATUSLED_ECMD_ACT_SUPPORT: ECMD Activity
  Provides for:
  Depends on: 
   * Heartbeat / Activity LED (STATUSLED_HB_ACT_SUPPORT)
   *  (ECMD_SUPPORT)


============help text in doc/Configure.help:==============
CRC_PAD_SUPPORT:


current implementation conflicts with VFS_INLINE_SUPPORT.

Appends a CRC16 checksum at the end of the regular flash. This can then
be used e.g. by a bootloader to check the integrity of the flash memory.

If you use a bootloader, activate BOOTLOADER_JUMP and set the correct
BOOTLOADER_SIZE.
==========================================================
CRC_PAD_SUPPORT: Add CRC Checksum
  Provides for:
   * CRC verification via ECMD (CRC_VERIFY_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
CRC_VERIFY_SUPPORT:


Depends on CRC_PAD_SUPPORT.

Allows to verify the crc checksum of the currently running flash via ECMD.
Mainly targeted at debugging the CRC_PAD_SUPPORT function.
==========================================================
CRC_VERIFY_SUPPORT: CRC verification via ECMD
  Provides for:
  Depends on: 
   * Add CRC Checksum (CRC_PAD_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TTY_SUPPORT: TTY Layer (EXPERIMENTAL)
  Provides for:
   * HD44780 Output (TTY_LL_HD44780)
   * S1D15G10 Output (TTY_LL_S1D15G10)
   * S1D13305 Output (TTY_LL_S1D13305)
   * vt100 Telnet Output (TTY_LL_VT100_TELNET)
   * LCD Support (TTY needed) (LOME6_LCD_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TTY_LL_HD44780: HD44780 Output
  Provides for:
  Depends on: 
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)
   * TTY Layer (EXPERIMENTAL) (TTY_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TTY_LL_S1D15G10: S1D15G10 Output
  Provides for:
  Depends on: 
   * S1D15G10 module driver (130x130-R/G/B-LCD) (S1D15G10_SUPPORT)
   * TTY Layer (EXPERIMENTAL) (TTY_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TTY_LL_S1D13305: S1D13305 Output
  Provides for:
  Depends on: 
   * S1D13305 module driver (GLCD) (S1D13305_SUPPORT)
   * TTY Layer (EXPERIMENTAL) (TTY_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TTY_LL_VT100_TELNET: vt100 Telnet Output
  Provides for:
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * TTY Layer (EXPERIMENTAL) (TTY_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_TTY_LAYER: TTY Layer
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
VFS_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Enable the virtual file system abstraction layer.

The VFS combines several physical data sources (e.g. SD reader and dataflash)
to one abstract source exposed to the HTTP server, TFTP, etc.

To make it short: say 'yes' if you want to serve files via HTTP.
==========================================================
VFS_SUPPORT: VFS (Virtual File System) support
  Provides for:
   * Atmel SPI Dataflash (VFS_DF_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Host Filesystem (VFS_HOST_SUPPORT)
   * SD/MMC-Card Access (VFS_SD_SUPPORT)
   * EEPROM (24cxx) Filesystem (VFS_EEPROM_SUPPORT)
   * EEPROM (24cxx) Raw Access (VFS_EEPROM_RAW_SUPPORT)
   * TFTP support (TFTP_SUPPORT)
   * Store Cron jobs in VFS (CRON_VFS_SUPPORT)
   * ECMD Scripting (ECMD_SCRIPT_SUPPORT)
   * use VFS (VFS_PWM_WAV_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
VFS_DF_SUPPORT:

Depends on:
 * VFS (Virtual File System) support (VFS_SUPPORT)
 * SPI Atmel dataflash (DATAFLASH_SUPPORT)

Link the dataflash to VFS.
==========================================================
VFS_DF_SUPPORT: Atmel SPI Dataflash
  Provides for:
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
VFS_INLINE_SUPPORT:

Depends on:
 * VFS (Virtual File System) support (VFS_SUPPORT)

Make files attached to the end of the firmware available to the VFS.

The make system automatically attaches all files stored below vfs/embed/
to the firmware.
==========================================================
VFS_INLINE_SUPPORT: VFS File Inlining
  Provides for:
   * Inline configuration page (CONFIG_INLINE_SUPPORT)
   * Inline the .config (VFS_CONFIG_INLINE_SUPPORT)
   * Inline message of the day (MOTD_INLINE_SUPPORT)
   * Inline RFM12 (RFM12_INLINE_SUPPORT)
   * Inline I2C (I2C_INLINE_SUPPORT)
   * Inline IO (VFS_IO_INLINE_SUPPORT)
   * Inline KTY (KTY_INLINE_SUPPORT)
   * Inline ADC (ADC_INLINE_SUPPORT)
   * Inline OneWire (ONEWIRE_INLINE_SUPPORT)
   * Inline Camera (CAMERA_INLINE_SUPPORT)
   * Inline Named Pin (NAMED_PIN_INLINE_SUPPORT)
   * Inline StellaLight (STELLA_INLINE_SUPPORT)
   * Inline MotorCurtain (MOTORCURTAIN_INLINE_SUPPORT)
   * Inline Dachs MSR1 (MSR1_INLINE_SUPPORT)
   * Inline Tecos TO-1 (TO1_INLINE_SUPPORT)
   * Inline MCUF (MCUF_INLINE_SUPPORT)
   * Inline Game Input (GAME_INPUT_INLINE_SUPPORT)
   * Inline uPnP (UPNP_INLINE_SUPPORT)
   * Inline LCD (LCD_INLINE_SUPPORT)
   * Inline OpenStreetmap with NMEA Data (NMEA_INLINE_SUPPORT)
   * Inline PWM Servo (PWM_SERVO_INLINE_SUPPORT)
   * Inline CW (CW_INLINE_SUPPORT)
   * Inline DMX (DMX_STORAGE_INLINE_SUPPORT)
   * Support Inline SVG (VFS_INLINE_INLINESVG_SUPPORT)
   * Support <input type=range> for Firefox (VFS_INLINE_HTML5_RANGE_FF_SUPPORT)
   * Optimize sizes when inlining (VFS_INLINE_HTML_CLEAN_SUPPORT)
   * Suport obsolete browsers (VFS_INLINE_OBSOLETE_BROWSER_SUPPORT)
   * Keep dummy files (DEBUG_INLINE_DUMMY)
   * Keep gzip files (DEBUG_INLINE_GZ)
   * Disable gzip (DEBUG_INLINE_DISABLE_GZ)
   * Inline tank level (TANKLEVEL_INLINE_SUPPORT)
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
CONFIG_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)

Inline page to display and change the basic (network) configuration
==========================================================
CONFIG_INLINE_SUPPORT: Inline configuration page
  Provides for:
   * Inline the .config (VFS_CONFIG_INLINE_SUPPORT)
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
VFS_CONFIG_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)

 Includes the .config file during compile into flash.
 Very useful for debugging or review of compile settings.

 Access via http://ethersexip/conf
==========================================================
VFS_CONFIG_INLINE_SUPPORT: Inline the .config
  Provides for:
  Depends on: 
   * Inline configuration page (CONFIG_INLINE_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
MOTD_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 *  (EEPROM_SUPPORT)

 Display the Message of the day on the VFS start page and adds
 a VFS page to change the MOTD via HTTP
==========================================================
MOTD_INLINE_SUPPORT: Inline message of the day
  Provides for:
  Depends on: 
   * Message of the day (MOTD) (MOTD_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   *  (EEPROM_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_INLINE_SUPPORT:

Depends on:
 * RFM12 ASK (EXPERIMENTAL) (RFM12_ASK_SUPPORT)
 * VFS File Inlining (VFS_INLINE_SUPPORT)

This page is only needed and helpful for RFM12 ASK support.
Please see http://ethersex.de/index.php/RFM12_ASK for details.
==========================================================
RFM12_INLINE_SUPPORT: Inline RFM12
  Provides for:
  Depends on: 
   * RFM12 ASK (RFM12_ASK_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
I2C_INLINE_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * VFS File Inlining (VFS_INLINE_SUPPORT)

Example page for I2C (TWI) chips, such as temperature sensor or
port extention.
==========================================================
I2C_INLINE_SUPPORT: Inline I2C
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
VFS_IO_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)

Powerful page to display and modify the current I/O status and
data direction register.
==========================================================
VFS_IO_INLINE_SUPPORT: Inline IO
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
KTY_INLINE_SUPPORT: Inline KTY
  Provides for:
  Depends on: 
   * KTY Calculation Support (KTY_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * KTY Calculation Support (KTY_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ADC_INLINE_SUPPORT: Inline ADC
  Provides for:
  Depends on: 
   * ADC input (ADC_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * ADC input (ADC_SUPPORT)


============help text in doc/Configure.help:==============
ONEWIRE_INLINE_SUPPORT:

Depends on:
 * Onewire support (ONEWIRE_SUPPORT)
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 * Onewire support (ONEWIRE_SUPPORT)

Powerful page for onewire support, with AJAX and SVG technology.
==========================================================
ONEWIRE_INLINE_SUPPORT: Inline OneWire
  Provides for:
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Onewire support (ONEWIRE_SUPPORT)


============help text in doc/Configure.help:==============
CAMERA_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 * DC3840 Camera (VFS_DC3840_SUPPORT)

Example page to display the current camera image.
==========================================================
CAMERA_INLINE_SUPPORT: Inline Camera
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * DC3840 Camera (VFS_DC3840_SUPPORT)


============help text in doc/Configure.help:==============
NAMED_PIN_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 * Named and logic state I/O (NAMED_PIN_SUPPORT)

Displays and modify the current status of named pins.
==========================================================
NAMED_PIN_INLINE_SUPPORT: Inline Named Pin
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Named and logic state I/O (NAMED_PIN_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STELLA_INLINE_SUPPORT: Inline StellaLight
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * StellaLight: Multichannel pwm (STELLA_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_INLINE_SUPPORT: Inline MotorCurtain
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Motor Curtain (MOTORCURTAIN_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MSR1_INLINE_SUPPORT: Inline Dachs MSR1
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Senertec Dachs MSR1 Support (MSR1_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TO1_INLINE_SUPPORT: Inline Tecos TO-1
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Tescon TO-1 Support (TO1_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MCUF_INLINE_SUPPORT: Inline MCUF
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * MCUF Module (MCUF_MODUL_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
GAME_INPUT_INLINE_SUPPORT: Inline Game Input
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Game Input (GAME_INPUT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
UPNP_INLINE_SUPPORT: Inline uPnP
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * uPnP (EXPERIMENTAL) (UPNP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
LCD_INLINE_SUPPORT: Inline LCD
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   *  (LCD_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
NMEA_INLINE_SUPPORT: Inline OpenStreetmap with NMEA Data
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * NMEA (GPS Mouse) support (NMEA_SUPPORT)


============help text in doc/Configure.help:==============
PWM_SERVO_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 * PWM Servo (PWM_SERVO_SUPPORT)

Enable this to get an example inline page for servo control.
==========================================================
PWM_SERVO_INLINE_SUPPORT: Inline PWM Servo
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * PWM Servo (PWM_SERVO_SUPPORT)


============help text in doc/Configure.help:==============
CW_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 * Morse Code (EXPERIMENTAL) (CW_SUPPORT)

Simple page to enter strings which will be converted to morse.
Output is the desired CW pin.
==========================================================
CW_INLINE_SUPPORT: Inline CW
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Morse Code (EXPERIMENTAL) (CW_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DMX_STORAGE_INLINE_SUPPORT: Inline DMX
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * DMX Storage (EXPERIMENTAL) (DMX_STORAGE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_INLINE_INLINESVG_SUPPORT: Support Inline SVG
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_INLINE_HTML5_RANGE_FF_SUPPORT: Support <input type=range> for Firefox
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_INLINE_HTML_CLEAN_SUPPORT: Optimize sizes when inlining
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_INLINE_OBSOLETE_BROWSER_SUPPORT: Suport obsolete browsers
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_INLINE_DUMMY: Keep dummy files
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_INLINE_GZ: Keep gzip files
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_INLINE_DISABLE_GZ: Disable gzip
  Provides for:
  Depends on: 
   * VFS File Inlining (VFS_INLINE_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_HOST_SUPPORT: Host Filesystem
  Provides for:
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   *  (ARCH_HOME)


============help text in doc/Configure.help:==============
VFS_SD_SUPPORT:

Depends on:
 * VFS (Virtual File System) support (VFS_SUPPORT)
 * MMC/SD card reader (SD_READER_SUPPORT)

Link the SD reader to VFS.

more details at http://ethersex.de/index.php/SD-Karte
==========================================================
VFS_SD_SUPPORT: SD/MMC-Card Access
  Provides for:
   * SD-Reader (DEBUG_SD_READER)
   * SD-Card Directory Listing (EXPERIMENTAL) (HTTP_SD_DIR_SUPPORT)
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SD_PING_READ: Ping-read SD card every 10s
  Provides for:
  Depends on: 
   *  (SD_READER_SUPPORT)
   * Use read-timeout (SD_READ_TIMEOUT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_EEPROM_SUPPORT: EEPROM (24cxx) Filesystem
  Provides for:
   * VFS EEPROM (VFS_EEPROM_DEBUG_SUPPORT)
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   * I2C EEPROM (24cxx) support (I2C_24CXX_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_EEPROM_RAW_SUPPORT: EEPROM (24cxx) Raw Access
  Provides for:
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   * I2C EEPROM (24cxx) support (I2C_24CXX_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
VFS_DC3840_SUPPORT:

Depends on:
 * DC3840 Serial camera (DC3840_SUPPORT)

Select this to enable the vfs camera features.

more details at http://ethersex.de/index.php/Dc3840_camera
==========================================================
VFS_DC3840_SUPPORT: DC3840 Camera
  Provides for:
   * Inline Camera (CAMERA_INLINE_SUPPORT)
  Depends on: 
   * DC3840 Serial camera (DC3840_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
DEBUG_FS:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_FS: Dataflash File System
  Provides for:
   * FS20 ECmd (DEBUG_ECMD_FS20)
  Depends on: 
   * Enable Debugging (DEBUG)
   *  (DATAFLASH_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_FS_INODETABLE:

Depends on:
 * File System (DEBUG_FS)

There's unfortunately no help available for this item.
==========================================================
DEBUG_FS_INODETABLE: Inode Table
  Provides for:
  Depends on: 
   * Dataflash File System (DEBUG_FS)


============help text in doc/Configure.help:==============
DEBUG_FS_MARK:

Depends on:
 * File System (DEBUG_FS)

There's unfortunately no help available for this item.
==========================================================
DEBUG_FS_MARK: Mark
  Provides for:
  Depends on: 
   * Dataflash File System (DEBUG_FS)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_EEPROM_DEBUG_SUPPORT: VFS EEPROM
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * EEPROM (24cxx) Filesystem (VFS_EEPROM_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_SD_READER:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_SD_READER: SD-Reader
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * SD/MMC-Card Access (VFS_SD_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TAP_SUPPORT: Ethernet (Linux TAP) support
  Provides for:
  Depends on: 
   *  (ARCH_HOST)


============help text in doc/Configure.help:==============
IPV6_STATIC_SUPPORT:

Depends on:
 * IPv6 support (IPV6_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
IPV6_STATIC_SUPPORT: Static IPv6 configuration
  Provides for:
  Depends on: 
   * IPv6 support (IPV6_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IEEE8021Q_SUPPORT: 802.1q Support (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (EXPERIMENTAL_SUPPORT)


============help text in doc/Configure.help:==============
CRYPTO_SUPPORT:

Enable cryptographic functionality in Ethersex.  You have to
choose the ciphers and/or hashes to include from the submenu.

If you'd like to use OpenVPN consider enabling Cast5 and MD5.
==========================================================
CRYPTO_SUPPORT: Cryptographic functionality
  Provides for:
   * CAST5 (CAST5_SUPPORT)
   * MD5 (MD5_SUPPORT)
   * SHA1 (SHA1_SUPPORT)
  Depends on: 
   * << nothing >> (y)


============help text in doc/Configure.help:==============
CAST5_SUPPORT:

Depends on:
 * Cryptographic functionality (CRYPTO_SUPPORT)

Enable CAST-5 cipher needed for OpenVPN.
==========================================================
CAST5_SUPPORT: CAST5
  Provides for:
  Depends on: 
   * Cryptographic functionality (CRYPTO_SUPPORT)


============help text in doc/Configure.help:==============
MD5_SUPPORT:

Depends on:
 * Cryptographic functionality (CRYPTO_SUPPORT)

Enable MD5-hash for OpenVPN packet authentication.
==========================================================
MD5_SUPPORT: MD5
  Provides for:
  Depends on: 
   * Cryptographic functionality (CRYPTO_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SHA1_SUPPORT: SHA1
  Provides for:
   * MySQL client (EXPERIMENTAL) (MYSQL_SUPPORT)
  Depends on: 
   * Cryptographic functionality (CRYPTO_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
TANKLEVEL_SUPPORT:

Depends on: 
 * Clock Support (CLOCK_SUPPORT)
 * ADC voltage suppot (ADC_VOLTAGE_SUPPORT)

This provides an application for measurement of tank levels by hydrostatic pressure.
You need an aquarium air pump, some kind of pipe/tube, a Freescale MPX5050DP
pressure sensor and an relay for the pump. Parameters are configurable by ECMD
and stored in EEPROM.

ECMD commands:

  tank param show : show current parameter settings
  tank param set PARAM VALUE : set tank parameter
    sensor_offset : zero offset of the pressure sensor
    med_density : medium density in g/ltr (default of 840 for fuel oil)
    ltr_per_m : Ltr per meter tank level
    ltr_full : Tank capacity in ltr
    raise_time : Pump time (in 1/50 secs)
    hold_time : Hold time before measurement (in 1/50 secs)
  tank param save : write tank parameter to EEPROM
  tank zero : probe sensor zero offset
  tank start : start measurement
  tank get : get last value

Mechanical setup:

                         +-------+
                         |Sensor |
                         +---+---+
                             | +--------+
             +---------------+-+  Pump  |
             |                 +--------+
      +------+------+
      |      |      |
      |      |      |
      |~~~~~~|~~~~~~|
      |      |      |
      |      |      |
      |      |      |
      +-------------+
           Tank

Electrical setup:

  Electrical Setup is quite simple. Connect the TANK_PUMP port with an relay
  (usually via an Transistor as current amp) and the output of the Sensor
  with the selected ADC channel (have a look at the datasheet for power supply
  decoupling and output filtering). Select a optimal Vref for the ADC if
  possible.
==========================================================
TANKLEVEL_SUPPORT: Tank level meter
  Provides for:
   * Measure on system startup (TANKLEVEL_STARTUP)
   * Measure at 12 am and 12 pm (TANKLEVEL_CRON_SUPPORT)
   * Pump output is active low (TANKLEVEL_PUMP_ACTIVE_LOW)
   * Check lock input (TANKLEVEL_LOCK_SUPPORT)
   * Inline tank level (TANKLEVEL_INLINE_SUPPORT)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * ADC voltage support (ADC_VOLTAGE_SUPPORT)


============help text in doc/Configure.help:==============
TANKLEVEL_STARTUP:


Start initial measurement at system startup.
==========================================================
TANKLEVEL_STARTUP: Measure on system startup
  Provides for:
  Depends on: 
   * Tank level meter (TANKLEVEL_SUPPORT)


============help text in doc/Configure.help:==============
TANKLEVEL_CRON_SUPPORT:

Depends on: 
 * Static Cron Support (CRON_SUPPORT)

Start measurement at fixed time. Can be changed in services/cron/cron_static.c.
==========================================================
TANKLEVEL_CRON_SUPPORT: Measure at 12 am and 12 pm
  Provides for:
  Depends on: 
   * Cron daemon (Static) (CRON_STATIC_SUPPORT)
   * Tank level meter (TANKLEVEL_SUPPORT)


============help text in doc/Configure.help:==============
TANKLEVEL_PUMP_ACTIVE_LOW:


Output pin for pump is inverted.
==========================================================
TANKLEVEL_PUMP_ACTIVE_LOW: Pump output is active low
  Provides for:
  Depends on: 
   * Tank level meter (TANKLEVEL_SUPPORT)


============help text in doc/Configure.help:==============
TANKLEVEL_LOCK_SUPPORT:


Check lock pin before measurement and wait if needed.
This is used to delay the measurement e.g. if the oil burner is running.
==========================================================
TANKLEVEL_LOCK_SUPPORT: Check lock input
  Provides for:
   * Lock input is active low (TANKLEVEL_LOCK_ACTIVE_LOW)
  Depends on: 
   * Tank level meter (TANKLEVEL_SUPPORT)


============help text in doc/Configure.help:==============
TANKLEVEL_LOCK_ACTIVE_LOW:


Lock input pin is inverted.
==========================================================
TANKLEVEL_LOCK_ACTIVE_LOW: Lock input is active low
  Provides for:
  Depends on: 
   * Check lock input (TANKLEVEL_LOCK_SUPPORT)


============help text in doc/Configure.help:==============
TANKLEVEL_INLINE_SUPPORT:

Depends on:
 * VFS File Inlining (VFS_INLINE_SUPPORT)
 * Tank level meter (TANKLEVEL_SUPPORT)

Inline a page to query the tank level.
==========================================================
TANKLEVEL_INLINE_SUPPORT: Inline tank level
  Provides for:
  Depends on: 
   * Tank level meter (TANKLEVEL_SUPPORT)
   * VFS File Inlining (VFS_INLINE_SUPPORT)


============help text in doc/Configure.help:==============
STELLA_SUPPORT:

Depends on:

Generates up to eight independant PWM signals e.g. to control
LEDs. Can be used as moodlight. Is controlled through the
stella UDP protocol, ecmd commands, cron jobs or via "random"
generated channel values.
Use StellaControl (see wiki) for a handy gui to control stella.
==========================================================
STELLA_SUPPORT: StellaLight: Multichannel pwm
  Provides for:
   * Inline StellaLight (STELLA_INLINE_SUPPORT)
   * Moodlight (MOODLIGHT_SUPPORT)
   * StellaLight UDP Protocol (STELLA_PROTOCOL_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
DEBUG_STELLA:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

Inform you about arriving stella packets, processed packets and if stella as a result send a response
==========================================================
DEBUG_STELLA: Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
WATCHCAT_SUPPORT:

Depends on:
 * Send ECMD messages (ECMD_SENDER_SUPPORT)
 * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)

Watch I/O lines for activity, i.e. rising or falling edge.
As a result of such a change a ECMD can be emitted to another host.

For example you can configure a ECMD to be sent to another host if
there is a falling edge on PA1.
==========================================================
WATCHCAT_SUPPORT: Watch IO changes (and react)
  Provides for:
  Depends on: 
   * /watchcat/config (services/watchcat/config)
   * Send via TCP (ECMD_SENDER_SUPPORT)
   * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
WATCHASYNC_SUPPORT: watchasync service
  Provides for:
   * WATCHASYNC (DEBUG_WATCHASYNC)
  Depends on: 
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CONF_WATCHASYNC_TIMESTAMP: Include unix timestamp
  Provides for:
  Depends on: 
   * Date and Time support (CLOCK_DATETIME_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CONF_WATCHASYNC_SUMMARIZE: Summarize Events
  Provides for:
  Depends on: 
   * Date and Time support (CLOCK_DATETIME_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_WATCHASYNC: WATCHASYNC
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * watchasync service (WATCHASYNC_SUPPORT)


============help text in doc/Configure.help:==============
APP_SAMPLE_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 ECMD Commands depends on
 * ECMD support (ECMD_PARSER_SUPPORT)

Example Application with empty functions to fill for your own
tests.
The main Application Sample file is services/appsample/appsample.c

Function "app_sample_init" will be executed on ethersex boot time, or by
 ECMD "sample_init".
Function "app_sample_periodic" will be executed periodically, just change
  timer value to fit for your needs (default period is 100*20ms = 2 seconds)
  Example: timer(100,app_sample_periodic)
  Also this function will be called by ECMD "sample_periodic",
Function "app_sample_onrequest" will be execured by ECMD command "sample"
==========================================================
APP_SAMPLE_SUPPORT: Application Sample (EXPERIMENTAL)
  Provides for:
   * Method init auto start (APP_SAMPLE_INIT_AUTOSTART_SUPPORT)
   * Method periodic auto start (APP_SAMPLE_PERIODIC_AUTOSTART_SUPPORT)
   * Application Sample Debug (DEBUG_APP_SAMPLE)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
APP_SAMPLE_INIT_AUTOSTART_SUPPORT: Method init auto start
  Provides for:
  Depends on: 
   * Application Sample (EXPERIMENTAL) (APP_SAMPLE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
APP_SAMPLE_PERIODIC_AUTOSTART_SUPPORT: Method periodic auto start
  Provides for:
  Depends on: 
   * Application Sample (EXPERIMENTAL) (APP_SAMPLE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_APP_SAMPLE: Application Sample Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Application Sample (EXPERIMENTAL) (APP_SAMPLE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOODLIGHT_SUPPORT: Moodlight
  Provides for:
  Depends on: 
   * StellaLight: Multichannel pwm (STELLA_SUPPORT)


============help text in doc/Configure.help:==============
CLOCK_SUPPORT:

Enable system clock.

A detailed step-by-step guide is available at
http://ethersex.de/index.php/Am_Puls_der_Zeit
==========================================================
CLOCK_SUPPORT: System clock support
  Provides for:
   * Tank level meter (TANKLEVEL_SUPPORT)
   * Date and Time support (CLOCK_DATETIME_SUPPORT)
   * Use 32 kHz crystal to tick the clock (CLOCK_CRYSTAL_SUPPORT)
   * Use CPU clock to tick the clock (EXPERIMENTAL) (CLOCK_CPU_SUPPORT)
   * Adjust clock to NTP clock signal (CLOCK_NTP_ADJUST_SUPPORT)
   * Synchronize using NTP protocol (NTP_SUPPORT)
   * NTP daemon (NTPD_SUPPORT)
   * Working hour meter (WHM_SUPPORT)
   * Uptime (whm in unix format like: d days, hh:mm) (UPTIME_SUPPORT)
   * Bulbdial Clock (EXPERIMENTAL) (BULBDIAL_SUPPORT)
   * Cron daemon (Dynamic) (CRON_SUPPORT)
   * Cron daemon (Static) (CRON_STATIC_SUPPORT)
   * Date ECMD support Only ! (CLOCK_DATE_SUPPORT)
   * Time ECMD support Only ! (CLOCK_TIME_SUPPORT)
   * MCUF Clock (MCUF_CLOCK_SUPPORT)
   * Clock autostart (MCUF_CLOCK_AUTOSTART_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_DATETIME_SUPPORT: Date and Time support
  Provides for:
   * Include unix timestamp (CONF_WATCHASYNC_TIMESTAMP)
   * Summarize Events (CONF_WATCHASYNC_SUMMARIZE)
   * Cron daemon (Dynamic) (CRON_SUPPORT)
   * Cron daemon (Static) (CRON_STATIC_SUPPORT)
   * Include unix timstamp (CONF_HTTPLOG_INCLUDE_TIMESTAMP)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
CLOCK_CRYSTAL_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)

Tick the system clock through a clock-crystal connected to TOSC1 and TOSC2,
instead of the internal oscillator.
==========================================================
CLOCK_CRYSTAL_SUPPORT: Use 32 kHz crystal to tick the clock
  Provides for:
  Depends on: 
   *  (n)


============help text in doc/Configure.help:==============
CLOCK_CRYSTAL_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)

Tick the system clock through a clock-crystal connected to TOSC1 and TOSC2,
instead of the internal oscillator.
==========================================================
CLOCK_CRYSTAL_SUPPORT: Use 32 kHz crystal to tick the clock
  Provides for:
  Depends on: 
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_CPU_SUPPORT: Use CPU clock to tick the clock (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (n)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_CPU_SUPPORT: Use CPU clock to tick the clock (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_NTP_ADJUST_SUPPORT: Adjust clock to NTP clock signal
  Provides for:
   * NTP Clock-Adjust (DEBUG_NTP_ADJUST)
  Depends on: 
   *  (n)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_NTP_ADJUST_SUPPORT: Adjust clock to NTP clock signal
  Provides for:
   * NTP Clock-Adjust (DEBUG_NTP_ADJUST)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * Synchronize using NTP protocol (NTP_SUPPORT)


============help text in doc/Configure.help:==============
NTP_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)
 * UDP support (UDP_SUPPORT)

Synchronize the system clock via NTP.
==========================================================
NTP_SUPPORT: Synchronize using NTP protocol
  Provides for:
   * Adjust clock to NTP clock signal (CLOCK_NTP_ADJUST_SUPPORT)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
NTPD_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)
 * UDP support (UDP_SUPPORT)

Enable NTP server.
==========================================================
NTPD_SUPPORT: NTP daemon
  Provides for:
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
WHM_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)

Calculate system uptime, adds further ECMD 'whm'.
==========================================================
WHM_SUPPORT: Working hour meter
  Provides for:
   * lome6 Service (EXPERIMENTAL) (LOME6_SUPPORT)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
UPTIME_SUPPORT: Uptime (whm in unix format like: d days, hh:mm)
  Provides for:
  Depends on: 
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_NTP_ADJUST: NTP Clock-Adjust
  Provides for:
  Depends on: 
   * Adjust clock to NTP clock signal (CLOCK_NTP_ADJUST_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
JABBER_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Enable Jabber client.
==========================================================
JABBER_SUPPORT: Jabber Client
  Provides for:
   * Use EEPROM (JABBER_EEPROM_SUPPORT)
   * Enable startup message (JABBER_STARTUP_MESSAGE_SUPPORT)
   * Last Info (JABBER_LAST_SUPPORT)
   * Version Info (JABBER_VERSION_SUPPORT)
   * Jabber (DEBUG_JABBER)
   * Jabber (EXPERIMENTAL) (ECMD_JABBER_SUPPORT)
  Depends on: 
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
JABBER_EEPROM_SUPPORT: Use EEPROM
  Provides for:
  Depends on: 
   * Jabber Client (JABBER_SUPPORT)


============help text in doc/Configure.help:==============
JABBER_STARTUP_MESSAGE_SUPPORT:

Depends on:
 * Jabber Client (JABBER_SUPPORT)

Enables a friendly startup message, which is sent to the target buddy
on each reboot.
==========================================================
JABBER_STARTUP_MESSAGE_SUPPORT: Enable startup message
  Provides for:
  Depends on: 
   * Jabber Client (JABBER_SUPPORT)


============help text in doc/Configure.help:==============
JABBER_LAST_SUPPORT:

Depends on:
 * Jabber Client (JABBER_SUPPORT)

Enables the last-seen feature of this ethersex jabber client.
==========================================================
JABBER_LAST_SUPPORT: Last Info
  Provides for:
  Depends on: 
   * Jabber Client (JABBER_SUPPORT)


============help text in doc/Configure.help:==============
JABBER_VERSION_SUPPORT:

Depends on:
 * Jabber Client (JABBER_SUPPORT)

Enables to send version details of the ethersex jabber client.
Change the values if you need to.
==========================================================
JABBER_VERSION_SUPPORT: Version Info
  Provides for:
  Depends on: 
   * Jabber Client (JABBER_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_JABBER: Jabber
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Jabber Client (JABBER_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PAM_SUPPORT: PAM Support
  Provides for:
   * Basic Authentication via PAM (HTTPD_AUTH_SUPPORT)
   * Authentification via PAM (TCP only) (ECMD_PAM_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_LDAP_AUTH: Debug LDAP Auth
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
UPNP_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Universal Plug and Play. see http://ethersex.de/index.php/UPnP
==========================================================
UPNP_SUPPORT: uPnP (EXPERIMENTAL)
  Provides for:
   * Inline uPnP (UPNP_INLINE_SUPPORT)
   * UPnP (DEBUG_UPNP)
  Depends on: 
   * UDP support (UDP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_UPNP: UPnP
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * uPnP (EXPERIMENTAL) (UPNP_SUPPORT)


============help text in doc/Configure.help:==============
DMX_FXSLOT_SUPPORT:

Depends on:
* DMX Storage (DMX_STORAGE_SUPPORT)
      
Architecture to set effects and animations on different DMX-devices. 
You can change following properties during runtime:
- active /inactive
- effect
- speed
- amount of devices 
- start channel of devices
- margin between the devices          
==========================================================
DMX_FXSLOT_SUPPORT: DMX FXslots for effects and animations
  Provides for:
  Depends on: 
   * DMX Storage (EXPERIMENTAL) (DMX_STORAGE_SUPPORT)
   *  (ARCH_AVR)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
UDP_ECHO_NET_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
UDP_ECHO_NET_SUPPORT: UDP Echo
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
LOME6_SUPPORT:

Depends on:
* TCP (TCP_SUPPORT)
* ECMD (ECMD_PARSER_SUPPORT)
* Working hour meter (WHM_SUPPORT)

Integrated server lights out management using ethersex
architecture.
Documentation is available in services/lome6/doc
GUI source (Qt4) is available in services/lome6/lome6-gui
==========================================================
LOME6_SUPPORT: lome6 Service (EXPERIMENTAL)
  Provides for:
   * LCD Support (TTY needed) (LOME6_LCD_SUPPORT)
   * OneWire Temperature Support (LOME6_ONEWIRE_SUPPORT)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Working hour meter (WHM_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
LOME6_LCD_SUPPORT: LCD Support (TTY needed)
  Provides for:
  Depends on: 
   * lome6 Service (EXPERIMENTAL) (LOME6_SUPPORT)
   * TTY Layer (EXPERIMENTAL) (TTY_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
LOME6_ONEWIRE_SUPPORT: OneWire Temperature Support
  Provides for:
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)
   * lome6 Service (EXPERIMENTAL) (LOME6_SUPPORT)


============help text in doc/Configure.help:==============
MOTD_SUPPORT:

Depends on:
 *  (EEPROM_SUPPORT)

Enables to save and change a "Message of the Day" in EEPROM.
If enabled, you can see the MOTD on the vfs start page, otherwise
just enter "motd" to read the latest message.
==========================================================
MOTD_SUPPORT: Message of the day (MOTD)
  Provides for:
   * Inline message of the day (MOTD_INLINE_SUPPORT)
  Depends on: 
   *  (EEPROM_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PROJECTOR_SANYO_Z700_SUPPORT: Projectors: SanyoZ700
  Provides for:
   * SANYO_Z700 Debug (DEBUG_SANYO_Z700)
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_SANYO_Z700: SANYO_Z700 Debug
  Provides for:
  Depends on: 
   * Projectors: SanyoZ700 (PROJECTOR_SANYO_Z700_SUPPORT)


============help text in doc/Configure.help:==============
TFTP_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Enable built-in TFTP server.

If configured with BOOTLOADER-support uploaded data is stored to
flash memory.

For Ethersex-based application firmware data can be uploaded/downloaded
to/from the virtual file system (i.e. dataflash, SD-cards, etc.)
==========================================================
TFTP_SUPPORT: TFTP support
  Provides for:
   * TFTP-o-matic (TFTPOMATIC_SUPPORT)
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
TFTP_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Enable built-in TFTP server.

If configured with BOOTLOADER-support uploaded data is stored to
flash memory.

For Ethersex-based application firmware data can be uploaded/downloaded
to/from the virtual file system (i.e. dataflash, SD-cards, etc.)
==========================================================
TFTP_SUPPORT: TFTP support
  Provides for:
   * TFTP-o-matic (TFTPOMATIC_SUPPORT)
  Depends on: 
   * UDP support (UDP_SUPPORT)
   * VFS (Virtual File System) support (VFS_SUPPORT)


============help text in doc/Configure.help:==============
TFTPOMATIC_SUPPORT:

Depends on:
 * TFTP support (TFTP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
TFTPOMATIC_SUPPORT: TFTP-o-matic
  Provides for:
  Depends on: 
   * TFTP support (TFTP_SUPPORT)


============help text in doc/Configure.help:==============
WOL_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Automatic power-on feature over network. This needs a networking
device capable of turning itself on at a given command.
==========================================================
WOL_SUPPORT: Wake on Lan (WOL)
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
BULBDIAL_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

A bulbdial clock displays the current time via lightsources or its shadow.
More details at http://ethersex.de/index.php?title=Bulbdial_Clock
==========================================================
BULBDIAL_SUPPORT: Bulbdial Clock (EXPERIMENTAL)
  Provides for:
   * Bulbdial Debug (DEBUG_BULBDIAL)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_BULBDIAL: Bulbdial Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Bulbdial Clock (EXPERIMENTAL) (BULBDIAL_SUPPORT)


============help text in doc/Configure.help:==============
MOTORCURTAIN_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Control a motor curtain or simillar devices. see
http://ethersex.de/index.php/MotorCurtain
==========================================================
MOTORCURTAIN_SUPPORT: Motor Curtain
  Provides for:
   * Inline MotorCurtain (MOTORCURTAIN_INLINE_SUPPORT)
   * Curtain: UDP Protocol (MOTORCURTAIN_PROTOCOL_SUPPORT)
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_INVERTED_MOTOR: Motor Enable Line is active-low
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_INVERTED_DIRECTION: Invert Motor Direction Line
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_INVERTED_SENSORS: Sensors are active-low
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_SENSORS_PULLUP: Sensors: Pull-up resistors
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_INVERTED_SAFETYSWITCH: Safety switch is active-low
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_SAFETYSWITCH_PULLUP: Safety switch: Pull-up resistor
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MOTORCURTAIN_PROGRESS_SUPPORT: Report progress via UDP
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
DMX_STORAGE_SUPPORT:

Depends on:

Part of the Ethersex Lighting Architecture

DMX Storage stores and manages DMX universes and provides routines for accessing the data with other modules.
Each of these modules can connect using a slot - so make sure that you have sufficient slots for each universe and each module!
==========================================================
DMX_STORAGE_SUPPORT: DMX Storage (EXPERIMENTAL)
  Provides for:
   * Inline DMX (DMX_STORAGE_INLINE_SUPPORT)
   * DMX FXslots for effects and animations (DMX_FXSLOT_SUPPORT)
   * Starburst: Multichannel pwm (EXPERIMENTAL) (STARBURST_SUPPORT)
   * Art-Net Node (ARTNET_SUPPORT)
   * DMX Support (DMX_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
FREQCOUNT_SUPPORT:

Incompatible with:
 * CLOCK_CPU_SUPPORT

If enabled, the frequency on the ICP1 pin is constantly sampled and stored in a
variable. It can then be retrieved with code or ECMD.
Frequencies can be from 2 Hz to about 50 CPU cycles to be sampled correctly
==========================================================
FREQCOUNT_SUPPORT: Frequency counter
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
STARBURST_SUPPORT:

Depends on:
 * DMX Storage (DMX_STORAGE_SUPPORT)

Part of the Ethersex Lighting Architecture

Starburst manages different external PWM controllers which display data provided by DMX Storage.
==========================================================
STARBURST_SUPPORT: Starburst: Multichannel pwm (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * DMX Storage (EXPERIMENTAL) (DMX_STORAGE_SUPPORT)
   *  (ARCH_AVR)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
DYNDNS_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

Simple UDP echo, i.e. simply sends back what it received on
UDP port 7.
==========================================================
DYNDNS_SUPPORT: DynDNS support
  Provides for:
  Depends on: 
   *  (UIP_SUPPORT)


============help text in doc/Configure.help:==============
VNC_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)

Ethersex is running a server application for virtual network
computing. see http://ethersex.de/index.php/VNC for more details.
==========================================================
VNC_SUPPORT: VNC Server Support
  Provides for:
   * Graphical Toolkit (GUI_SUPPORT)
   * VNC (DEBUG_VNC)
  Depends on: 
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
GUI_SUPPORT: Graphical Toolkit
  Provides for:
  Depends on: 
   * VNC Server Support (VNC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_VNC: VNC
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * VNC Server Support (VNC_SUPPORT)


============help text in doc/Configure.help:==============
CRON_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)

Enable cron-alike service. Cronjobs can be added programmatically
or by other module's ecmd commands and removed via the ecmd command
"cron rm".  A list of all active jobs can be requested via "cron list".

Syntax for the cron ecmd commands:
cron add MIN HOUR DAY MONTH DOW ECMD : add a cron job
cron rm [POSITION} (where POSITION is in 0..N-1) : remove all/selected job
cron list : list all jobs
cron utc POSITION [STATE] : show/set flag to use UTC time for a job

To add a stella cron job to, for example, fade up all lights at 6pm,
compile in stella support and use the stella ecmd command "stella cron"
==========================================================
CRON_SUPPORT: Cron daemon (Dynamic)
  Provides for:
   * Measure at 12 am and 12 pm (TANKLEVEL_CRON_SUPPORT)
   * Use UTC instead of LOCALTIME (CRON_DEFAULT_UTC)
   * Store Cron jobs in VFS (CRON_VFS_SUPPORT)
   * Store Cron jobs in EEPROM (CRON_EEPROM_SUPPORT)
   * Anacon Support (CRON_ANACRON_SUPPORT)
   * MCUF Module in Cron (MCUF_MODUL_CRON_SUPPORT)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * Date and Time support (CLOCK_DATETIME_SUPPORT)


============help text in doc/Configure.help:==============
CRON_DEFAULT_UTC:

Depends on:
 * Cron daemon (CRON_SUPPORT)

Create conjobs with UTC flag set by default.
==========================================================
CRON_DEFAULT_UTC: Use UTC instead of LOCALTIME
  Provides for:
  Depends on: 
   * Cron daemon (Dynamic) (CRON_SUPPORT)


============help text in doc/Configure.help:==============
CRON_SUPPORT_TEST:

Depends on:
 * Cron daemon (CRON_SUPPORT)

Create some test jobs at system startup (for debuging).
==========================================================
CRON_SUPPORT_TEST: Test entries
  Provides for:
  Depends on: 
   * Cron daemon (Dynamic) (CRON_SUPPORT)


============help text in doc/Configure.help:==============
CRON_VFS_SUPPORT:

Depends on:
 * Cron daemon (CRON_SUPPORT)
 * VFS support (VFS_SUPPORT)
 * !NOT! Store Cron jobs in EEPROM (CRON_EEPROM_SUPPORT)

Store cron jobs as file on VFS storage like SD card.

Syntax for the corresponding ecmd commands:
cron persistent POSITION [STATE] : show/set persistence flag for a job
cron save : write all persistent jobs to file
==========================================================
CRON_VFS_SUPPORT: Store Cron jobs in VFS
  Provides for:
  Depends on: 
   * Cron daemon (Dynamic) (CRON_SUPPORT)
   * VFS (Virtual File System) support (VFS_SUPPORT)


============help text in doc/Configure.help:==============
CRON_EEPROM_SUPPORT:

Depends on:
 * Cron daemon (CRON_SUPPORT)
 * !NOT! Store Cron jobs in VFS (CRON_VFS_SUPPORT)

Store cron jobs as file in EEPROM.

Syntax for the corresponding ecmd commands:
cron persistent POSITION [STATE] : show/set persistence flag for a job
cron save : write all persistent jobs to EEPROM
==========================================================
CRON_EEPROM_SUPPORT: Store Cron jobs in EEPROM
  Provides for:
  Depends on: 
   * Cron daemon (Dynamic) (CRON_SUPPORT)


============help text in doc/Configure.help:==============
CRON_ANACRON_SUPPORT:

Depends on:
 * Cron daemon (CRON_SUPPORT)

If system is booted (with an RTC attached) or an time gap is detected
(i.e. by an NTP adjustment) all missed jobs are executed, if marked as
anacron job. The maximum time span is configured by CRON_ANACRON_MAXAGE.
This function is usefull for jobs that set internal states (for example
the target temperature of a heating control dependend on the daytime).

Syntax for the corresponding ecmd commands:
cron anacron POSITION [STATE] : show/set anacron flag for a job
==========================================================
CRON_ANACRON_SUPPORT: Anacon Support
  Provides for:
  Depends on: 
   * Cron daemon (Dynamic) (CRON_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_CRON_DRYRUN: Dry run - Do not execute anything
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_CRON: Cron
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
CRON_STATIC_SUPPORT:

Depends on:
 * System clock support (CLOCK_SUPPORT)

Enable cron-alike service. The difference to the normal cron daemon is, that you
cannot change the cronjobs after compilation. Jobs are stored in the flash memory.
To add jobs, see cron_static/cron_static.c. You can use the normal cron and cron_static
at the same time.
==========================================================
CRON_STATIC_SUPPORT: Cron daemon (Static)
  Provides for:
   * Measure at 12 am and 12 pm (TANKLEVEL_CRON_SUPPORT)
   * netStat client (EXPERIMENTAL) (NETSTAT_SUPPORT)
   * MCUF Module in Cron (MCUF_MODUL_CRON_SUPPORT)
  Depends on: 
   * System clock support (CLOCK_SUPPORT)
   * Date and Time support (CLOCK_DATETIME_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
GLCD_MENU_SUPPORT: Graphic menu (EXPERIMENTAL)
  Provides for:
   * Use german umlauts (GLCDMENU_UMLAUTS)
   * Mouse support (untested!) (GLCDMENU_MOUSE_SUPPORT)
   * S1D13305 Output (GLCDMENU_S1D13305)
   * Graphic menu Debug (DEBUG_GLCD_MENU)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
GLCDMENU_UMLAUTS: Use german umlauts
  Provides for:
  Depends on: 
   * Graphic menu (EXPERIMENTAL) (GLCD_MENU_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
GLCDMENU_MOUSE_SUPPORT: Mouse support (untested!)
  Provides for:
  Depends on: 
   * Graphic menu (EXPERIMENTAL) (GLCD_MENU_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
GLCDMENU_S1D13305: S1D13305 Output
  Provides for:
  Depends on: 
   * S1D13305 module driver (GLCD) (S1D13305_SUPPORT)
   *  (S1D13305_GRAPHICS)
   * Graphic menu (EXPERIMENTAL) (GLCD_MENU_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_GLCD_MENU: Graphic menu Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Graphic menu (EXPERIMENTAL) (GLCD_MENU_SUPPORT)


============help text in doc/Configure.help:==============
HTTPD_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)

Enable HTTP server.
==========================================================
HTTPD_SUPPORT: HTTP Server
  Provides for:
   * SOAP backend (EXPERIMENTAL) (HTTPD_SOAP_SUPPORT)
   * Basic Authentication via PAM (HTTPD_AUTH_SUPPORT)
   * SD-Card Directory Listing (EXPERIMENTAL) (HTTP_SD_DIR_SUPPORT)
   * MIME-Type detection (EXPERIMENTAL) (MIME_SUPPORT)
   * Favicon Support (/embed/If.ico) (HTTP_FAVICON_SUPPORT)
  Depends on: 
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HTTPD_SOAP_SUPPORT: SOAP backend (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * HTTP Server (HTTPD_SUPPORT)
   * SOAP (XML RPC) (EXPERIMENTAL) (SOAP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
HTTPD_AUTH_SUPPORT:

Depends on:
 * HTTP Server (HTTPD_SUPPORT)

Enable 'basic'-Authentication for HTTP server.
==========================================================
HTTPD_AUTH_SUPPORT: Basic Authentication via PAM
  Provides for:
  Depends on: 
   * HTTP Server (HTTPD_SUPPORT)
   * PAM Support (PAM_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HTTP_SD_DIR_SUPPORT: SD-Card Directory Listing (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * SD/MMC-Card Access (VFS_SD_SUPPORT)
   * HTTP Server (HTTPD_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MIME_SUPPORT: MIME-Type detection (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * HTTP Server (HTTPD_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HTTP_FAVICON_SUPPORT: Favicon Support (/embed/If.ico)
  Provides for:
  Depends on: 
   * HTTP Server (HTTPD_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_HTTPD:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_HTTPD: HTTPD
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
USTREAM_SUPPORT: ustream (EXPERIMENTAL)
  Provides for:
   * VS1053 uStream debugging (DEBUG_USTREAM)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_USTREAM: VS1053 uStream debugging
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * ustream (EXPERIMENTAL) (USTREAM_SUPPORT)


============help text in doc/Configure.help:==============
SNMP_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Make ADC, Hostname and Uptime available through SNMP.

Set default values for DESCRIPTION, LOCATION, CONTACT and COMMUNITY STRING.
==========================================================
SNMP_SUPPORT: Simple Network Managment Protocol support (snmp)
  Provides for:
   * Onewire SNMP support (ONEWIRE_SNMP_SUPPORT)
  Depends on: 
   * UDP support (UDP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
MDNS_SD_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Multi-cast DNS (well-known as "Avahi") support.

If you enable this option, the firmware will announce availibilty of
the configured services in the local network using Avahi.
==========================================================
MDNS_SD_SUPPORT: MDNS service announcement (Avahi)
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
STELLA_PROTOCOL_SUPPORT: StellaLight UDP Protocol
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)
   * StellaLight: Multichannel pwm (STELLA_SUPPORT)


============help text in doc/Configure.help:==============
NETSTAT_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)
 * Cron Static support (CRON_STATIC_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Internet Statistik for Ethersex. This function adds your ethersex to
the survey.
Examples and Links at http://www.ethersex.de/index.php/Netstat

Length of variable buffer
==========================================================
NETSTAT_SUPPORT: netStat client (EXPERIMENTAL)
  Provides for:
   * NETSTAT (DEBUG_NETSTAT)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * Cron daemon (Static) (CRON_STATIC_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_NETSTAT: NETSTAT
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * netStat client (EXPERIMENTAL) (NETSTAT_SUPPORT)


============help text in doc/Configure.help:==============
DNS_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Link a simple DNS resolver into the firmware.  It can be used
either in own program code or by other applications.  For example
the NTP client is capable of doing so.
==========================================================
DNS_SUPPORT: DNS support
  Provides for:
   * DynDNS support (DYNDNS_SUPPORT)
   * SMS77 client (EXPERIMENTAL) (SMS77_SUPPORT)
   * httplog client (EXPERIMENTAL) (HTTPLOG_SUPPORT)
   * Twitter/identi.ca client (EXPERIMENTAL) (TWITTER_SUPPORT)
   * FS20/FHT Recieve: Send to server (FS20_RECEIVE_SENDER)
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SMS77_SUPPORT: SMS77 client (EXPERIMENTAL)
  Provides for:
   * Use EEPROM (SMS77_EEPROM_SUPPORT)
   * SMS77 (DEBUG_SMS77)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * DNS support (DNS_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SMS77_EEPROM_SUPPORT: Use EEPROM
  Provides for:
  Depends on: 
   * SMS77 client (EXPERIMENTAL) (SMS77_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_SMS77: SMS77
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * SMS77 client (EXPERIMENTAL) (SMS77_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TO1_SUPPORT: Tescon TO-1 Support
  Provides for:
   * Inline Tecos TO-1 (TO1_INLINE_SUPPORT)
   * TO1 (DEBUG_TO1)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_TO1: TO1
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Tescon TO-1 Support (TO1_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
NMEA_SUPPORT: NMEA (GPS Mouse) support
  Provides for:
   * Inline OpenStreetmap with NMEA Data (NMEA_INLINE_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
ARTNET_SUPPORT:

Depends on: 
 * DMX Storage (EXPERIMENTAL) (DMX_STORAGE_SUPPORT)
 * UDP support (UDP_SUPPORT)
 * NET_MAX_FRAME_LENGTH > 571

Artnet needs at least a 572 byte network buffer to work. You can set the buffer size 
in "Network -> Network Buffer Size".
==========================================================
ARTNET_SUPPORT: Art-Net Node
  Provides for:
  Depends on: 
   *  (NET_MAX_FRAME_LENGTH_GT_571)
   * DMX Storage (EXPERIMENTAL) (DMX_STORAGE_SUPPORT)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_ARTNET: ARTNET
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FNORDLICHT_BASIC_SUPPORT: Fnordlicht
  Provides for:
   * Fnordlicht control (FNORDLICHT_SUPPORT)
   * Fnordlicht servo (FNORDLICHT_SERVO_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FNORDLICHT_SUPPORT: Fnordlicht control
  Provides for:
  Depends on: 
   * Fnordlicht (FNORDLICHT_BASIC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FNORDLICHT_SERVO_SUPPORT: Fnordlicht servo
  Provides for:
  Depends on: 
   * PWM Servo (PWM_SERVO_SUPPORT)
   * Fnordlicht (FNORDLICHT_BASIC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_FNORDLICHT: FNORDLICHT
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
ECMD_PARSER_SUPPORT:

Depends on:

Ethersex COmanD = ECMD is a kind of i/o interface.
More details at http://ethersex.de/index.php/ECMD
==========================================================
ECMD_PARSER_SUPPORT: ECMD (Ethersex Command) support
  Provides for:
   * lome6 Service (EXPERIMENTAL) (LOME6_SUPPORT)
   * Auto remove Backspaces (ECMD_REMOVE_BACKSPACE_SUPPORT)
   * Alias Command Names (ALIASCMD_SUPPORT)
   * Authentification via PAM (TCP only) (ECMD_PAM_SUPPORT)
   * ECMD Scripting (ECMD_SCRIPT_SUPPORT)
   * USART (RS232) (ECMD_SERIAL_USART_SUPPORT)
   * TCP/Telnet (ECMD_TCP_SUPPORT)
   * UDP (ECMD_UDP_SUPPORT)
   * I2C (ECMD_SERIAL_I2C_SUPPORT)
   * USB (ECMD_USB_SUPPORT)
   * Jabber (EXPERIMENTAL) (ECMD_JABBER_SUPPORT)
   * IRC (EXPERIMENTAL) (ECMD_IRC_SUPPORT)
   * SMS (ECMD_SMS_SUPPORT)
   * EEPROM - Read on device eeprom space (ECMD_EEPROM_SUPPORT)
   * Disable IP Config (DISABLE_IPCONF_SUPPORT)
   * Disable Reboot-Commands (DISABLE_REBOOT_SUPPORT)
   * IP Statistics (IPSTATS_SUPPORT)
   * Memory usage information (free) (FREE_SUPPORT)
   * Mirror ECMD commands (ECMD_MIRROR_REQUEST)
   * ADS7822 12bit ADC (ADS7822_SUPPORT)
   * MCUF Module Display Mode (MCUF_MODUL_DISPLAY_MODE_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ECMD_REMOVE_BACKSPACE_SUPPORT: Auto remove Backspaces
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
ALIASCMD_SUPPORT:

Depends on:
 * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Define aliases for your ecmds. Aliases are expanded if $ ist the first
character of your emcd. Example:

`$i' -> `show ip'
==========================================================
ALIASCMD_SUPPORT: Alias Command Names
  Provides for:
  Depends on: 
   * /ecmd/alias_defs.m4 (protocols/ecmd/alias_defs.m4)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ECMD_PAM_SUPPORT: Authentification via PAM (TCP only)
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * TCP/Telnet (ECMD_TCP_SUPPORT)
   * PAM Support (PAM_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_SCRIPT_SUPPORT:

Depends on:
 * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
 * VFS (Virtual File System) support (VFS_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Scripting Support for ECMD.

Available Commands:

* rem any text  -> comments in files
* echo any text -> print out any text
* wait i        -> wait i milliseconds
* set var value -> set variable to value
* get var       -> get value of variable
* inc var       -> increment variable (numbers only)
* dec var       -> decrement variable (numbers only)
* if ( ecmd1 COMPARATOR CONST ) then ecmd2
* if ( %var COMPARATOR CONST ) then ecmd2
                -> compares output of variable or ecmd1, if successful
                   then execute ecmd2
  Available COMPARATORS are:
  String comparators:
    eq  ->  equals
    ne  ->  not equals
  Number comparators:
    ==  ->  equals
    !=  ->  not equals
    >   ->  greater than
    <   ->  lower than
    >=  ->  greater or equals than
    <=  ->  lower or equals than
    ==  ->  equals
    OK  ->  value is TRUE (CONST is ignored, but mandatory)
    !   ->  not (CONST is ignored, but mandatory)

* call file     -> calls script file from vfs and execute it line by line

only available while script is running
* exit          -> exit currently running script
* goto n        -> jumps to line number of script

Hints:
Currently only fixed variable names are working. eg.
set 0 foo  -> sets variable %0 to value foo
set 1 23   -> set variable 1 to value 23
inc 1      -> increments variable 1
get 1      -> outputs value of variable 1

The if condition is able to get the values of variables. Just enter
an % befor the variable. eg. this will set the variable 3 to value 42,
The condition will check the value of variable 3 and if equals with "42"
it will execute the command (this case it will be "date")

set 3 42
if ( %3 == 42 ) then date
==========================================================
ECMD_SCRIPT_SUPPORT: ECMD Scripting
  Provides for:
   * ECMD SCRIPT (DEBUG_ECMD_SCRIPT)
  Depends on: 
   * VFS (Virtual File System) support (VFS_SUPPORT)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
ECMD_SERIAL_USART_SUPPORT:

Depends on:
 * ECMD support (ECMD_PARSER_SUPPORT)

Add support for ECMDs received on serial RS232 link.
==========================================================
ECMD_SERIAL_USART_SUPPORT: USART (RS232)
  Provides for:
   * USART (RS485 mode) (ECMD_SERIAL_USART_RS485_SUPPORT)
   * No Echo (ECMD_SERIAL_NO_ECHO)
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_SERIAL_USART_RS485_SUPPORT:

Depends on:
 * Usart ecmd interface (RS232) (ECMD_SERIAL_USART_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
ECMD_SERIAL_USART_RS485_SUPPORT: USART (RS485 mode)
  Provides for:
  Depends on: 
   * USART (RS232) (ECMD_SERIAL_USART_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ECMD_SERIAL_NO_ECHO: No Echo
  Provides for:
  Depends on: 
   * USART (RS232) (ECMD_SERIAL_USART_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_TCP_SUPPORT:

Depends on:
 * ECMD support (ECMD_PARSER_SUPPORT)
 * TCP support (TCP_SUPPORT)

Add TCP Telnet like ECMD support.
See http://ethersex.de/index.php/ECMD for help.
See also http://ethersex.de/index.php/ECMD_Protocols#ECMD_via_TCP
==========================================================
ECMD_TCP_SUPPORT: TCP/Telnet
  Provides for:
   * Authentification via PAM (TCP only) (ECMD_PAM_SUPPORT)
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_UDP_SUPPORT:

Depends on:
 * ECMD support (ECMD_PARSER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * UDP support (UDP_SUPPORT)

Add UDP ECMD support.
See http://ethersex.de/index.php/ECMD for help.
See also http://ethersex.de/index.php/ECMD_Protocols#ECMD_via_UDP
==========================================================
ECMD_UDP_SUPPORT: UDP
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_SERIAL_I2C_SUPPORT:

Depends on:
 * ECMD support (ECMD_PARSER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Add ECMD Support via TWI or I2C Interface.
See http://ethersex.de/index.php/ECMD for help.
==========================================================
ECMD_SERIAL_I2C_SUPPORT: I2C
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
ECMD_USB_SUPPORT:

Depends on:
 * ECMD support (ECMD_PARSER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * USB (Softwarestack) Support (EXPERIMENTAL) (USB_SUPPORT)

Enable ECMD via USB Interface
You should set
"Network  ---> USB (Softwarestack) Support  ---> USB Device Type"
to "other".
See http://ethersex.de/index.php/ECMD for help.
See also http://ethersex.de/index.php/ECMD_Protocols#ECMD_via_USB and
http://ethersex.de/index.php/USB#ECMD_via_USB
==========================================================
ECMD_USB_SUPPORT: USB
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * USB (Softwarestack) Support (USB_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_JABBER_SUPPORT:

Depends on:
 * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * Jabber Client (JABBER_SUPPORT)

Enable support for ECMD via Jabber.
==========================================================
ECMD_JABBER_SUPPORT: Jabber (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * Jabber Client (JABBER_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_IRC_SUPPORT:

Depends on:
 * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * IRC client (EXPERIMENTAL) (IRC_SUPPORT)

Add IRC support for ECMD. This enables to control your
ethersex device via IRC chat protocol.
==========================================================
ECMD_IRC_SUPPORT: IRC (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * IRC client (EXPERIMENTAL) (IRC_SUPPORT)


============help text in doc/Configure.help:==============
ECMD_SMS_SUPPORT:

Depends on:
 * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
 * SMS Support (SMS_SUPPORT)

Send and receive ECMD via Short Message Service.
==========================================================
ECMD_SMS_SUPPORT: SMS
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   * SMS Support (SMS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ECMD_EEPROM_SUPPORT: EEPROM - Read on device eeprom space
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
ECMD_SENDER_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)

Add code to send ECMDs to other hosts (e.g. Etherrape/-sex compatible
hardware, PCs, etc.).

This is especially useful with the option 'Watch IO changes'.
==========================================================
ECMD_SENDER_SUPPORT: Send via TCP
  Provides for:
   * Watch IO changes (and react) (WATCHCAT_SUPPORT)
   * Send via UDP (UECMD_SENDER_SUPPORT)
  Depends on: 
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
UECMD_SENDER_SUPPORT: Send via UDP
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
DISABLE_IPCONF_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)
 * ECMD support (ECMD_PARSER_SUPPORT)

Disable the ecmd's to set ip, gw, netmask and mac
==========================================================
DISABLE_IPCONF_SUPPORT: Disable IP Config
  Provides for:
  Depends on: 
   *  (UIP_SUPPORT)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
DISABLE_REBOOT_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)
 * ECMD support (ECMD_PARSER_SUPPORT)

Disable the commands to reboot the ethersex from remote (reset, wdreset and bootloader)
==========================================================
DISABLE_REBOOT_SUPPORT: Disable Reboot-Commands
  Provides for:
  Depends on: 
   *  (UIP_SUPPORT)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
IPSTATS_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)
 * ECMD support (ECMD_PARSER_SUPPORT)

Collect and print out network statistic.
==========================================================
IPSTATS_SUPPORT: IP Statistics
  Provides for:
  Depends on: 
   *  (UIP_SUPPORT)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
FREE_SUPPORT:

Depends on:
 * ECMD support (ECMD_PARSER_SUPPORT)

Print out memory usage.
==========================================================
FREE_SUPPORT: Memory usage information (free)
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_DATE_SUPPORT: Date ECMD support Only !
  Provides for:
  Depends on: 
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CLOCK_TIME_SUPPORT: Time ECMD support Only !
  Provides for:
  Depends on: 
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_LCD_ECMD_SUPPORT: HR20 LCD Display ECMD
  Provides for:
  Depends on: 
   *  (atmega169)
   *  (EXPERIMENTAL_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_TEMP_ECMD_SUPPORT: HR20 TEMP ECMD
  Provides for:
  Depends on: 
   *  (atmega169)
   *  (EXPERIMENTAL_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ECMD_MIRROR_REQUEST: Mirror ECMD commands
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_ECMD:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD: ECMD
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_FS20:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_FS20: ECMD FS20
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_IP:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_IP: ECMD IP
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_MAC:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_MAC: ECMD MAC
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_NET:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_NET: ECMD NET
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_OW_LIST:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_OW_LIST: ECMD OW LIST
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_OW_ROM:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_OW_ROM: ECMD OW ROM
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_PORTIO:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_PORTIO: ECMD PORTIO
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_ECMD_RC5:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_RC5: ECMD RC5
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_ECMD_SCRIPT: ECMD SCRIPT
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * ECMD Scripting (ECMD_SCRIPT_SUPPORT)


============help text in doc/Configure.help:==============
HTTPLOG_SUPPORT:

Depends on:
 * TCP protocol support (TCP_SUPPORT)
 * DNS protocol (DNS_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
and in case you want to include unix time stamps:
 * Date and Time support (CLOCK_DATETIME_SUPPORT)
==========================================================
HTTPLOG_SUPPORT: httplog client (EXPERIMENTAL)
  Provides for:
   * HTTPLOG (DEBUG_HTTPLOG)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * DNS support (DNS_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
CONF_HTTPLOG_INCLUDE_TIMESTAMP:


Include unix timestamp: <boolean value to add a current local timestamp as a GET parameter>
==========================================================
CONF_HTTPLOG_INCLUDE_TIMESTAMP: Include unix timstamp
  Provides for:
  Depends on: 
   * Date and Time support (CLOCK_DATETIME_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_HTTPLOG: HTTPLOG
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * httplog client (EXPERIMENTAL) (HTTPLOG_SUPPORT)


============help text in doc/Configure.help:==============
CW_SUPPORT:


Command: "cw send MESSAGE"

Convert a string to morse code, which means that a pin
is just toggling to "on" and "off" regarding the morse
code standard. Also called "continous wave" (CW)
==========================================================
CW_SUPPORT: Morse Code (EXPERIMENTAL)
  Provides for:
   * Inline CW (CW_INLINE_SUPPORT)
   * CW on boot (CW_BOOT_SUPPORT)
   * Beacon (CW_BEACON_SUPPORT)
   * Output Pin (CW_PIN_SUPPORT)
   * Output PWM (CW_PWM_FREQ_SUPPORT)
   * Morse Debug (DEBUG_CW)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CW_BOOT_SUPPORT: CW on boot
  Provides for:
  Depends on: 
   * Morse Code (EXPERIMENTAL) (CW_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CW_BEACON_SUPPORT: Beacon
  Provides for:
  Depends on: 
   * Morse Code (EXPERIMENTAL) (CW_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CW_PIN_SUPPORT: Output Pin
  Provides for:
  Depends on: 
   * Morse Code (EXPERIMENTAL) (CW_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CW_PWM_FREQ_SUPPORT: Output PWM
  Provides for:
  Depends on: 
   * Morse Code (EXPERIMENTAL) (CW_SUPPORT)
   * PWM Freqency (PWM_FREQ_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CW_RFM12_ASK_SUPPORT: Output RFM12 ASK
  Provides for:
  Depends on: 
   * RFM12 ASK (RFM12_ASK_SUPPORT)
   * PWM Freqency (PWM_FREQ_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_CW: Morse Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Morse Code (EXPERIMENTAL) (CW_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SERIAL_LINE_LOG_SUPPORT: Serial Line Log Support
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SERIAL_LINE_LOG_SPACE_COMPRESSION: Space Compression
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
USB_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Support for USB functions. see http://ethersex.de/index.php/USB
for details
==========================================================
USB_SUPPORT: USB (Softwarestack) Support
  Provides for:
   * USB (ECMD_USB_SUPPORT)
   * device is self powered (USB_CFG_IS_SELF_POWERED)
   * auto set USB enable pin (AUTOSET_USB_ENABLE_PIN_SUPPORT)
   * USBnet (USB_NET_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
USB_CFG_IS_SELF_POWERED:


USB device has its on power supply, if yes check this box.
==========================================================
USB_CFG_IS_SELF_POWERED: device is self powered
  Provides for:
  Depends on: 
   * USB (Softwarestack) Support (USB_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
AUTOSET_USB_ENABLE_PIN_SUPPORT: auto set USB enable pin
  Provides for:
  Depends on: 
   * USB (Softwarestack) Support (USB_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
USB_MOUSE_SEQUENCE_SUPPORT: auto run sequence
  Provides for:
  Depends on: 
   *  (USB_MOUSE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_USB_HID_KEYBOARD: Keyboard Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   *  (USB_KEYBOARD_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_USB_HID_MOUSE: Mouse Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   *  (USB_MOUSE_SUPPORT)


============help text in doc/Configure.help:==============
USB_NET_SUPPORT:

Depends on:
 * USB (Softwarestack) Support (EXPERIMENTAL) (USB_SUPPORT)
 * Networking support (UIP_SUPPORT)

IP-Networking over USB.  It doesn't use kernel-driven CDC-subset
because of too high controller load.

You need to use the userspace-space client available
in contrib/usb_net

See also http://ethersex.de/index.php/USB#usbnet
==========================================================
USB_NET_SUPPORT: USBnet
  Provides for:
  Depends on: 
   * USB (Softwarestack) Support (USB_SUPPORT)
   *  (USB_NET)


============help text in doc/Configure.help:==============
USB_ARP_PROXY:

Depends on:
 * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
USB_ARP_PROXY: USBnet ARP-Proxy
  Provides for:
  Depends on: 
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)


============help text in doc/Configure.help:==============
YPORT_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)

Enable TCP-to-RS232 gateway, i.e. an X-Port.
It's bound to TCP port 7970.

A really cool possibility to use YPort is socat. With socat you can set up
a PTY device on your Linux, which you can use as a normal serial interface.

socat PTY,link=/dev/YPort TCP:192.168.1.5:7970
==========================================================
YPORT_SUPPORT: YPort Support
  Provides for:
   * YPORT Debug (DEBUG_YPORT)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_YPORT: YPORT Debug
  Provides for:
  Depends on: 
   * YPort Support (YPORT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRC_SUPPORT: IRC client (EXPERIMENTAL)
  Provides for:
   * IRC (EXPERIMENTAL) (ECMD_IRC_SUPPORT)
   * Greet Joiners (IRC_GREET_SUPPORT)
   * IRC (DEBUG_IRC)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRC_GREET_SUPPORT: Greet Joiners
  Provides for:
  Depends on: 
   * IRC client (EXPERIMENTAL) (IRC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_IRC: IRC
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * IRC client (EXPERIMENTAL) (IRC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IOUDP_PROTOCOL_SUPPORT: IO: UDP Protocol
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
MODBUS_SUPPORT:

Depends on:

Modbus is a standardized bus, see http://modbus.org/ for details.

Enable this if you'd like to enable a TCP(port 502)-to-Modbus(RS485) gateway.
==========================================================
MODBUS_SUPPORT: Modbus Support
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
DALI_SUPPORT:

Depends on: 

Enable code to control lighting via the DALI bus
(Digital Addressable Lighting Interface)
==========================================================
DALI_SUPPORT: DALI light control
  Provides for:
   * Raw DALI sending (DALI_RAW_SUPPORT)
   * DALI receiving (DALI_RECEIVE_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DALI_RAW_SUPPORT: Raw DALI sending
  Provides for:
  Depends on: 
   * DALI light control (DALI_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DALI_RECEIVE_SUPPORT: DALI receiving
  Provides for:
  Depends on: 
   * DALI light control (DALI_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SOAP_SUPPORT: SOAP (XML RPC) (EXPERIMENTAL)
  Provides for:
   * SOAP backend (EXPERIMENTAL) (HTTPD_SOAP_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
TCP_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
TCP_SUPPORT: TCP support
  Provides for:
   * vt100 Telnet Output (TTY_LL_VT100_TELNET)
   * watchasync service (WATCHASYNC_SUPPORT)
   * Jabber Client (JABBER_SUPPORT)
   * lome6 Service (EXPERIMENTAL) (LOME6_SUPPORT)
   * VNC Server Support (VNC_SUPPORT)
   * HTTP Server (HTTPD_SUPPORT)
   * ustream (EXPERIMENTAL) (USTREAM_SUPPORT)
   * netStat client (EXPERIMENTAL) (NETSTAT_SUPPORT)
   * SMS77 client (EXPERIMENTAL) (SMS77_SUPPORT)
   * Authentification via PAM (TCP only) (ECMD_PAM_SUPPORT)
   * TCP/Telnet (ECMD_TCP_SUPPORT)
   * Send via TCP (ECMD_SENDER_SUPPORT)
   * httplog client (EXPERIMENTAL) (HTTPLOG_SUPPORT)
   * YPort Support (YPORT_SUPPORT)
   * IRC client (EXPERIMENTAL) (IRC_SUPPORT)
   * Sendmail support (DEPRECATED) (SENDMAIL_SUPPORT)
   * Twitter/identi.ca client (EXPERIMENTAL) (TWITTER_SUPPORT)
   * MySQL client (EXPERIMENTAL) (MYSQL_SUPPORT)
   * FS20/FHT Recieve: Send to server (FS20_RECEIVE_SENDER)
  Depends on: 
   *  (UIP_SUPPORT)


============help text in doc/Configure.help:==============
UDP_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
UDP_SUPPORT: UDP support
  Provides for:
   * RFM12 raw (RFM12_RAW_SUPPORT)
   * ZBUS raw (ZBUS_RAW_SUPPORT)
   * OpenVPN (OPENVPN_SUPPORT)
   * Synchronize using NTP protocol (NTP_SUPPORT)
   * NTP daemon (NTPD_SUPPORT)
   * uPnP (EXPERIMENTAL) (UPNP_SUPPORT)
   * UDP Echo (UDP_ECHO_NET_SUPPORT)
   * TFTP support (TFTP_SUPPORT)
   * TFTP support (TFTP_SUPPORT)
   * Wake on Lan (WOL) (WOL_SUPPORT)
   * Motor Curtain (MOTORCURTAIN_SUPPORT)
   * Simple Network Managment Protocol support (snmp) (SNMP_SUPPORT)
   * MDNS service announcement (Avahi) (MDNS_SD_SUPPORT)
   * StellaLight UDP Protocol (STELLA_PROTOCOL_SUPPORT)
   * DNS support (DNS_SUPPORT)
   * Art-Net Node (ARTNET_SUPPORT)
   * UDP (ECMD_UDP_SUPPORT)
   * Send via UDP (UECMD_SENDER_SUPPORT)
   * IO: UDP Protocol (IOUDP_PROTOCOL_SUPPORT)
   * UDP broadcast support (BROADCAST_SUPPORT)
   * Curtain: UDP Protocol (MOTORCURTAIN_PROTOCOL_SUPPORT)
   * SYSLOG support (SYSLOG_SUPPORT)
   * RC5 IR UDP (RC5_UDP_SUPPORT)
   * I2C to UDP Gateway (I2C_UDP_SUPPORT)
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
  Depends on: 
   *  (UIP_SUPPORT)


============help text in doc/Configure.help:==============
BROADCAST_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
BROADCAST_SUPPORT: UDP broadcast support
  Provides for:
   * BOOTP (DHCP-like) support (BOOTP_SUPPORT)
   * DHCP support (DHCP_SUPPORT)
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
ICMP_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
ICMP_SUPPORT: ICMP support
  Provides for:
  Depends on: 
   *  (UIP_SUPPORT)


============help text in doc/Configure.help:==============
IPCHAIR_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Basic firewalling functionallity, similar to IPtables.

Configuration in ipchair/userscript.m4
==========================================================
IPCHAIR_SUPPORT: IPchair (firewalling) (EXPERIMENTAL)
  Provides for:
   * IPchair: Masquerading (UNTESTED) (IPCHAIR_MASQ)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
IPCHAIR_MASQ:

Depends on:
 * IPchair (firewalling) (IPCHAIR_SUPPORT)

Simple, quite untested, masquerading code.  You might consider using
it for USB-to-anywhere dongles ...

Use with care.
==========================================================
IPCHAIR_MASQ: IPchair: Masquerading (UNTESTED)
  Provides for:
  Depends on: 
   * IPchair (firewalling) (EXPERIMENTAL) (IPCHAIR_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MSR1_SUPPORT: Senertec Dachs MSR1 Support
  Provides for:
   * Inline Dachs MSR1 (MSR1_INLINE_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_MSR1: MSR1
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
ZBUS_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

IP link over RS485

Typical/default baudrate 19200.  Distances of several hundred metres possible
without problems.  ZBUS/RS485 needs two wires for communication.

32 stations possible on one bus.

The ZBUS protocol is our own development, its no official standard.
For details on ZBus see http://dokucode.de/tiki-index.php?page=ZBusInterface
==========================================================
ZBUS_SUPPORT: ZBus Support
  Provides for:
   * ZBUS raw (ZBUS_RAW_SUPPORT)
   * ZBUS TX (STATUSLED_ZBUS_TX_SUPPORT)
   * ZBUS RX (STATUSLED_ZBUS_RX_SUPPORT)
   * ZBUS TX Activity (STATUSLED_ZBUS_TX_ACT_SUPPORT)
   * ZBUS RX Activity (STATUSLED_ZBUS_RX_ACT_SUPPORT)
   * ZBUS ARP-Proxy (ZBUS_ARP_PROXY)
   * ZBUS ecmd (ZBUS_ECMD)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
ZBUS_ARP_PROXY:

Depends on:
 * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
 * ZBus Support (ZBUS_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
ZBUS_ARP_PROXY: ZBUS ARP-Proxy
  Provides for:
  Depends on: 
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * ZBus Support (ZBUS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ZBUS_ECMD: ZBUS ecmd
  Provides for:
  Depends on: 
   * ZBus Support (ZBUS_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_ZBUS: ZBUS Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
SENDMAIL_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Sample code to send emails on custom events (currently start-up only).
==========================================================
SENDMAIL_SUPPORT: Sendmail support (DEPRECATED)
  Provides for:
   * SMTP Auth Support (SENDMAIL_AUTH_SUPPORT)
  Depends on: 
   * TCP support (TCP_SUPPORT)


============help text in doc/Configure.help:==============
SENDMAIL_AUTH_SUPPORT:

Depends on:
 * Sendmail support (smtp) (SENDMAIL_SUPPORT)

Support for SMTP authentication.
==========================================================
SENDMAIL_AUTH_SUPPORT: SMTP Auth Support
  Provides for:
  Depends on: 
   * Sendmail support (DEPRECATED) (SENDMAIL_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_SENDMAIL:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_SENDMAIL: Sendmail
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DMX_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

please see http://ethersex.de/index.php/DMX
==========================================================
DMX_SUPPORT: DMX Support
  Provides for:
  Depends on: 
   * DMX Storage (EXPERIMENTAL) (DMX_STORAGE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
TWITTER_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)
 * DNS support (DNS_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

 For Twitter valid values are:
 Service: "twitter.com"
 API Root: " "
 Username: [Your Twitter Username]
 Password: [Your Twitter Password]
Be aware, your password will be saved in plain text in
the .config-File!
==========================================================
TWITTER_SUPPORT: Twitter/identi.ca client (EXPERIMENTAL)
  Provides for:
   * TWITTER (DEBUG_TWITTER)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * DNS support (DNS_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_TWITTER: TWITTER
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Twitter/identi.ca client (EXPERIMENTAL) (TWITTER_SUPPORT)


============help text in doc/Configure.help:==============
MYSQL_SUPPORT:

Depends on:
 * TCP support (TCP_SUPPORT)
 * SHA1 (SHA1_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Basic MySQL support to connect to a MySQL server and send simple
statements.

Please note ECMD is limited to 50 chars.
==========================================================
MYSQL_SUPPORT: MySQL client (EXPERIMENTAL)
  Provides for:
   * MySQL (DEBUG_MYSQL)
  Depends on: 
   * TCP support (TCP_SUPPORT)
   * SHA1 (SHA1_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_MYSQL: MySQL
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * MySQL client (EXPERIMENTAL) (MYSQL_SUPPORT)


============help text in doc/Configure.help:==============
MOTORCURTAIN_PROTOCOL_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)
 * Motor Curtain (MOTORCURTAIN_SUPPORT)

Please add your new help-text here.
==========================================================
MOTORCURTAIN_PROTOCOL_SUPPORT: Curtain: UDP Protocol
  Provides for:
  Depends on: 
   * UDP support (UDP_SUPPORT)
   * Motor Curtain (MOTORCURTAIN_SUPPORT)


============help text in doc/Configure.help:==============
SYSLOG_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * UDP support (UDP_SUPPORT)

Enable syslog CLIENT support, i.e. allow to log messages to specified
syslog server.  These messages can be sent straight from the
C source code using syslog_send... calls or from 6Control scripts.
==========================================================
SYSLOG_SUPPORT: SYSLOG support
  Provides for:
   * Use SYSLOG instead UART (DEBUG_USE_SYSLOG)
  Depends on: 
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_INPUT_SUPPORT: HR20 Wheel and Button Input
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
PS2_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Support for PS/2 keyboards, currently keystrokes are only logged to
SYSLOG.  That is, you need to modify the firmware for further use.
==========================================================
PS2_SUPPORT: PS/2 keyboard
  Provides for:
   * PS/2: Use German layout (PS2_GERMAN_LAYOUT)
   * Debug PS/2 (DEBUG_PS2)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
PS2_GERMAN_LAYOUT:

Depends on:
 * PS/2 keyboard (PS2_SUPPORT)

 Set german keyboard layout.
==========================================================
PS2_GERMAN_LAYOUT: PS/2: Use German layout
  Provides for:
  Depends on: 
   * PS/2 keyboard (PS2_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_PS2: Debug PS/2
  Provides for:
  Depends on: 
   * PS/2 keyboard (PS2_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
BUTTONS_INPUT_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Button Input adds hook functions to be called by other parts
of ethersex without specific knowledge of the selected
input device.
==========================================================
BUTTONS_INPUT_SUPPORT: Buttons Input
  Provides for:
   * Game Input (GAME_INPUT_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
GAME_INPUT_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Placeholder for game input hardware such as

* digital Joystick (start up placeholder)

(not yet implemented)
* PS/2 Keyboard
* ECMD
* RFM12
* RFM12-ASK
* IRDA
* Input Pins
==========================================================
GAME_INPUT_SUPPORT: Game Input
  Provides for:
   * Inline Game Input (GAME_INPUT_INLINE_SUPPORT)
   * Digital Joystick (JOYSTICK_DIGITAL_SUPPORT)
   * MCUF Game Input Test (MCUF_TEST_GAME_INPUT)
   * MCUF Snake Interactive (MCUF_MODUL_BORG16_SNAKE_INTERACTIVE_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * Buttons Input (BUTTONS_INPUT_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
JOYSTICK_DIGITAL_SUPPORT:

Depends on:
 * Game Input (GAME_INPUT_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

 Support for standard (old style) digital Joysticks a la
 Competition Pro (http://de.wikipedia.org/wiki/Competition_Pro)
==========================================================
JOYSTICK_DIGITAL_SUPPORT: Digital Joystick
  Provides for:
  Depends on: 
   * Game Input (GAME_INPUT_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_JOYSTICK_DIGITAL: Digital Joystick
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_GAME_INPUT: Game Input
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
ENC28J60_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

 If your hardware uses the ENC28J60 IC and you want network functions, just
 answer 'y' and got forther with more configuration.
==========================================================
ENC28J60_SUPPORT: Ethernet (ENC28J60) support
  Provides for:
   * BOOTP (DHCP-like) support (BOOTP_SUPPORT)
   * DHCP support (DHCP_SUPPORT)
   * USBnet ARP-Proxy (USB_ARP_PROXY)
   * ZBUS ARP-Proxy (ZBUS_ARP_PROXY)
   * ENC28J60 (DEBUG_ENC28J60)
   * RFM12 ARP-Proxy (RFM12_ARP_PROXY)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
IPV6_STATIC_SUPPORT:

Depends on:
 * IPv6 support (IPV6_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
IPV6_STATIC_SUPPORT: Static IPv6 configuration
  Provides for:
  Depends on: 
   * IPv6 support (IPV6_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IEEE8021Q_SUPPORT: 802.1q Support (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (EXPERIMENTAL_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_ENC28J60:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ENC28J60: ENC28J60
  Provides for:
   * Interrupt (DEBUG_INTERRUPT)
   * Rev. 4 Workaround (DEBUG_REV4_WORKAROUND)
  Depends on: 
   * Enable Debugging (DEBUG)
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_INTERRUPT:

Depends on:
 * ENC28J60 (DEBUG_ENC28J60)

There's unfortunately no help available for this item.
==========================================================
DEBUG_INTERRUPT: Interrupt
  Provides for:
  Depends on: 
   * ENC28J60 (DEBUG_ENC28J60)


============help text in doc/Configure.help:==============
DEBUG_REV4_WORKAROUND:

Depends on:
 * ENC28J60 (DEBUG_ENC28J60)

There's unfortunately no help available for this item.
==========================================================
DEBUG_REV4_WORKAROUND: Rev. 4 Workaround
  Provides for:
  Depends on: 
   * ENC28J60 (DEBUG_ENC28J60)


============help text in doc/Configure.help:==============
PWM_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Uses the integrated timer to generate PWM and CTC waveforms.
==========================================================
PWM_SUPPORT: PWM Generator
  Provides for:
   * PWM general (PWM_GENERAL_SUPPORT)
   * PWM Wave (PWM_WAV_SUPPORT)
   * PWM Melody (PWM_MELODY_SUPPORT)
   * PWM Servo (PWM_SERVO_SUPPORT)
   * PWM Freqency (PWM_FREQ_SUPPORT)
   * PWM DTMF (PWM_DTMF_SUPPORT)
   * enable with PWM (HBRIDGE_PWM_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PWM_GENERAL_SUPPORT: PWM general
  Provides for:
   * invert input (PWM_GENERAL_INVERT_SUPPORT)
   * fading support (PWM_GENERAL_FADING_SUPPORT)
   * use Channel A (CH_A_PWM_GENERAL_SUPPORT)
   * use Channel B (CH_B_PWM_GENERAL_SUPPORT)
   * use Channel C (CH_C_PWM_GENERAL_SUPPORT)
  Depends on: 
   * PWM Generator (PWM_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PWM_GENERAL_INVERT_SUPPORT: invert input
  Provides for:
  Depends on: 
   * PWM general (PWM_GENERAL_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PWM_GENERAL_FADING_SUPPORT: fading support
  Provides for:
  Depends on: 
   * PWM general (PWM_GENERAL_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CH_A_PWM_GENERAL_SUPPORT: use Channel A
  Provides for:
  Depends on: 
   * PWM general (PWM_GENERAL_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CH_B_PWM_GENERAL_SUPPORT: use Channel B
  Provides for:
  Depends on: 
   * PWM general (PWM_GENERAL_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CH_C_PWM_GENERAL_SUPPORT: use Channel C
  Provides for:
  Depends on: 
   * PWM general (PWM_GENERAL_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
PWM_WAV_SUPPORT:

Depends on:
 * PWM Generator (PWM_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

 Wave output support (8kHz mono output)
 Just replace pwm/ethersex.wav with your own 8-Bit, PCM,
 mono, 8000Hz .wav file.
==========================================================
PWM_WAV_SUPPORT: PWM Wave
  Provides for:
   * use VFS (VFS_PWM_WAV_SUPPORT)
  Depends on: 
   * PWM Generator (PWM_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
VFS_PWM_WAV_SUPPORT: use VFS
  Provides for:
  Depends on: 
   * PWM Wave (PWM_WAV_SUPPORT)
   * VFS (Virtual File System) support (VFS_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
PWM_MELODY_SUPPORT:

Depends on:
 * PWM Generator (PWM_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

enables support for tunes and duration, which saves much
more memory than wave output.

Defined in pwm/pwm.c "entchen" with tune and duration.
==========================================================
PWM_MELODY_SUPPORT: PWM Melody
  Provides for:
   * Entchen (ENTCHEN_PWM_MELODY_SUPPORT)
   * Tetris (TETRIS_PWM_MELODY_SUPPORT)
  Depends on: 
   * PWM Generator (PWM_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ENTCHEN_PWM_MELODY_SUPPORT: Entchen
  Provides for:
  Depends on: 
   * PWM Melody (PWM_MELODY_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TETRIS_PWM_MELODY_SUPPORT: Tetris
  Provides for:
  Depends on: 
   * PWM Melody (PWM_MELODY_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
PWM_SERVO_SUPPORT:

Depends on:
 * PWM Generator (PWM_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Support up to 10 servo motors to be controlled via ethersex. The
PWM signal can be inverted if needed.
==========================================================
PWM_SERVO_SUPPORT: PWM Servo
  Provides for:
   * Inline PWM Servo (PWM_SERVO_INLINE_SUPPORT)
   * Fnordlicht servo (FNORDLICHT_SERVO_SUPPORT)
  Depends on: 
   * PWM Generator (PWM_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PWM_FREQ_SUPPORT: PWM Freqency
  Provides for:
   * Output PWM (CW_PWM_FREQ_SUPPORT)
   * Output RFM12 ASK (CW_RFM12_ASK_SUPPORT)
  Depends on: 
   * PWM Generator (PWM_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PWM_DTMF_SUPPORT: PWM DTMF
  Provides for:
  Depends on: 
   * PWM Generator (PWM_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_PWM: PWM
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_PWM_SERVO: PWM Servo
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DCF77_SUPPORT:

Depends on:
 * Use 32 kHz crystal to tick the clock (CLOCK_CRYSTAL_SUPPORT)

Use the DCF77-signal as a clock source to synchronize to.
Consider this as alpha-code for the moment :-)
==========================================================
DCF77_SUPPORT: Synchronize using DCF77 signal
  Provides for:
  Depends on: 
   *  (ARCH_AVR)
   *  (DCFENABLE)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DCF1_USE_PON_SUPPORT: Use PON
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_DCF77: DCF77
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ZACWIRE_SUPPORT: ZACwire for TSic sensors
  Provides for:
   * Raw ZACwire data (ZACWIRE_RAW_SUPPORT)
   * Convert TSic306 data (ZACWIRE_CONVERT306_SUPPORT)
   * Convert TSic506 data (ZACWIRE_CONVERT506_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ZACWIRE_RAW_SUPPORT: Raw ZACwire data
  Provides for:
  Depends on: 
   * ZACwire for TSic sensors (ZACWIRE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ZACWIRE_CONVERT306_SUPPORT: Convert TSic306 data
  Provides for:
  Depends on: 
   * ZACwire for TSic sensors (ZACWIRE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ZACWIRE_CONVERT506_SUPPORT: Convert TSic506 data
  Provides for:
  Depends on: 
   * ZACwire for TSic sensors (ZACWIRE_SUPPORT)


============help text in doc/Configure.help:==============
SRAM_SUPPORT:

Depends on:

Add SRAM support for exteral RAM ICs. This will allow to
expand the RAM and HEAP.

More details at http://ethersex.de/index.php/SRAM
==========================================================
SRAM_SUPPORT: External SRAM support
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
SD_NETIO_ADDON_WORKAROUND:

Depends on: 

Work around a bad hardware design of the Pollin Netio Addon board.
This board uses resistores to adjust voltage levels, so the SD card
is enabled even when the chip enable pin is in tristate mode.
==========================================================
SD_NETIO_ADDON_WORKAROUND: Netio Addon Workaround
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SHT_SUPPORT: SHT 1x/7x humidity & temp sensors
  Provides for:
   * Raw SHT data (SHT_RAW_SUPPORT)
   * Converted temperature data (SHT_TEMP_SUPPORT)
   * Converted humidity data (SHT_HUMID_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SHT_RAW_SUPPORT: Raw SHT data
  Provides for:
  Depends on: 
   * SHT 1x/7x humidity & temp sensors (SHT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SHT_TEMP_SUPPORT: Converted temperature data
  Provides for:
  Depends on: 
   * SHT 1x/7x humidity & temp sensors (SHT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SHT_HUMID_SUPPORT: Converted humidity data
  Provides for:
  Depends on: 
   * SHT 1x/7x humidity & temp sensors (SHT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DAC_SUPPORT: digital-to-analog converter (DAC)
  Provides for:
   * TLC5620 Output (TLC5620_SUPPORT)
   * LTC1257 Output (LTC1257_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
TLC5620_SUPPORT: TLC5620 Output
  Provides for:
  Depends on: 
   *  (ARCH_AVR)
   * digital-to-analog converter (DAC) (DAC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
LTC1257_SUPPORT: LTC1257 Output
  Provides for:
   * LTC1257 (core) (DEBUG_LTC1257_CORE)
   * LTC1257 (ECMD) (DEBUG_LTC1257_ECMD)
  Depends on: 
   *  (ARCH_AVR)
   * digital-to-analog converter (DAC) (DAC_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_LTC1257_CORE: LTC1257 (core)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * LTC1257 Output (LTC1257_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_LTC1257_ECMD: LTC1257 (ECMD)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * LTC1257 Output (LTC1257_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IR_SUPPORT: IR Receivers
  Provides for:
   * SD-Card Directory Listing (EXPERIMENTAL) (HTTP_SD_DIR_SUPPORT)
   * IPchair (firewalling) (EXPERIMENTAL) (IPCHAIR_SUPPORT)
   * IPchair: Masquerading (UNTESTED) (IPCHAIR_MASQ)
   * Send RC5 IR-codes (RC5_SUPPORT)
   * IRMP IR (IRMP_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
RC5_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Add support to send and receive RC5 IR-remote codes.
==========================================================
RC5_SUPPORT: RC5 IR (deprecated)
  Provides for:
   * RC5 IR UDP (RC5_UDP_SUPPORT)
   * RC5 Debug (DEBUG_RC5)
  Depends on: 
   * IR Receivers (IR_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
RC5_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Add support to send and receive RC5 IR-remote codes.
==========================================================
RC5_SUPPORT: Send RC5 IR-codes
  Provides for:
   * RC5 IR UDP (RC5_UDP_SUPPORT)
   * RC5 Debug (DEBUG_RC5)
  Depends on: 
   * Send RC5 IR-codes (RC5_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RC5_UDP_SUPPORT: RC5 IR UDP
  Provides for:
  Depends on: 
   * Send RC5 IR-codes (RC5_SUPPORT)
   * UDP support (UDP_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
DEBUG_RC5:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_RC5: RC5 Debug
  Provides for:
  Depends on: 
   * Send RC5 IR-codes (RC5_SUPPORT)
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT: IRMP IR
  Provides for:
   * Receive IR-codes (IRMP_RX_SUPPORT)
   * Send IR-codes (IRMP_TX_SUPPORT)
   * IRMP ecmd (IRMP_ECMD)
   * IRMP Debug (DEBUG_IRMP)
  Depends on: 
   * IR Receivers (IR_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_RX_SUPPORT: Receive IR-codes
  Provides for:
   * IRMP RX (STATUSLED_IRMP_RX_SUPPORT)
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_TX_SUPPORT: Send IR-codes
  Provides for:
   * IRMP TX (STATUSLED_IRMP_TX_SUPPORT)
   * Use external modulator for sender (IRMP_EXTERNAL_MODULATOR)
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
IRMP_EXTERNAL_MODULATOR:

Depends on: 
 * Send IR-codes (IRMP_TX_SUPPORT)

An external modulator, i.e. NE555 on the etherrape board, is used to
modulate the infrared signal. Connect it to the pin assigned to
IRMP_TX in pinning/hardware/<your_hardware>.
==========================================================
IRMP_EXTERNAL_MODULATOR: Use external modulator for sender
  Provides for:
  Depends on: 
   * Send IR-codes (IRMP_TX_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_ECMD: IRMP ecmd
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_SIRCS_PROTOCOL: SIRCS
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NEC_PROTOCOL: NEC
  Provides for:
   * JVC (IRMP_SUPPORT_JVC_PROTOCOL)
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NEC16_PROTOCOL: NEC16
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NEC42_PROTOCOL: NEC42
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_JVC_PROTOCOL: JVC
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)
   * NEC (IRMP_SUPPORT_NEC_PROTOCOL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_SAMSUNG_PROTOCOL: SAMSUNG
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_MATSUSHITA_PROTOCOL: MATSUSHITA
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_KASEIKYO_PROTOCOL: KASEIKYO
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_DENON_PROTOCOL: DENON
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RECS80_PROTOCOL: RECS80
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RECS80EXT_PROTOCOL: RECS80EXT
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RC5_PROTOCOL: RC5(X)
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RC6_PROTOCOL: RC6
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RC6A_PROTOCOL: RC6A
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NUBERT_PROTOCOL: NUBERT
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_BANG_OLUFSEN_PROTOCOL: BANG&OLUFSEN
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_GRUNDIG_PROTOCOL: GRUNDIG
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NOKIA_PROTOCOL: NOKIA
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_SIEMENS_PROTOCOL: SIEMENS
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_FDC_PROTOCOL: FDC
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RCCAR_PROTOCOL: RCCAR
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NIKON_PROTOCOL: NIKON
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_RUWIDO_PROTOCOL: RUWIDO
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_IR60_PROTOCOL: IR60
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_KATHREIN_PROTOCOL: KATHREIN
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_NETBOX_PROTOCOL: NETBOX
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_LEGO_PROTOCOL: LEGO
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
IRMP_SUPPORT_THOMSON_PROTOCOL: THOMSON
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_IRMP: IRMP Debug
  Provides for:
  Depends on: 
   * IRMP IR (IRMP_SUPPORT)


============help text in doc/Configure.help:==============
SER_RAM_SUPPORT:

Depends on: 

Enables support for serial interfaced RAM chips (connected via SPI, I2C 
or other serial interface).
==========================================================
SER_RAM_SUPPORT: Serial RAM support
  Provides for:
   * Microchip 23K256 SPI-RAM support (SER_RAM_23K256_SUPPORT)
  Depends on: 


============help text in doc/Configure.help:==============
SER_RAM_23K256_SUPPORT:

Depends on: 
 * Serial RAM support (SER_RAM_SUPPORT)

The Microchip 23K256 serial RAM chip provides 32kB RAM and is 
connected via SPI.
==========================================================
SER_RAM_23K256_SUPPORT: Microchip 23K256 SPI-RAM support
  Provides for:
   * Debug 23K256 (DEBUG_SER_RAM_23K256)
  Depends on: 
   * Serial RAM support (SER_RAM_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_SER_RAM_23K256: Debug 23K256
  Provides for:
   * Perform RAM Test on startup (SER_RAM_23K256_RAMTEST)
  Depends on: 
   * Enable Debugging (DEBUG)
   * Microchip 23K256 SPI-RAM support (SER_RAM_23K256_SUPPORT)


============help text in doc/Configure.help:==============
SER_RAM_23K256_RAMTEST:

Depends on: 
 * Debug 23K256 (DEBUG_SER_RAM_23K256)

Performs a RAM test during start up of ethersex. The whole RAM is written
then read out and compared with was was written before.
==========================================================
SER_RAM_23K256_RAMTEST: Perform RAM Test on startup
  Provides for:
  Depends on: 
   * Debug 23K256 (DEBUG_SER_RAM_23K256)


============help text in doc/Configure.help:==============
I2C_MASTER_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Support to send and receive I2C-Bus (TWI) commands.
==========================================================
I2C_MASTER_SUPPORT: I2C Master Support (EXPERIMENTAL)
  Provides for:
   * Inline I2C (I2C_INLINE_SUPPORT)
   * I2C detection support (I2C_DETECT_SUPPORT)
   * I2C generic read/write support (I2C_GENERIC_SUPPORT)
   * I2C EEPROM (24cxx) support (I2C_24CXX_SUPPORT)
   * I2C LM75 temperature sensor (I2C_LM75_SUPPORT)
   * I2C DS1631 temperature sensor (I2C_DS1631_SUPPORT)
   * I2C DS13X7 RTC (I2C_DS13X7_SUPPORT)
   * I2C PCF8583 RTC (I2C_PCF8583_SUPPORT)
   * I2C TSL2550 light sensor (I2C_TSL2550_SUPPORT)
   * I2C BMP085 barometric pressure sensor (I2C_BMP085_SUPPORT)
   * BMP085 advanced barometric calculations (I2C_BMP085_BAROCALC_SUPPORT)
   * I2C PCA9531 8-bit LED dimmer (I2C_PCA9531_SUPPORT)
   * I2C PCA9685 12-bit LED dimmer (I2C_PCA9685_SUPPORT)
   * I2C PCF8574X Port extension (I2C_PCF8574X_SUPPORT)
   * I2C PCA9555 16bit Port extension (I2C_PCA9555_SUPPORT)
   * I2C MAX7311 16bit port extension (I2C_MAX7311_SUPPORT)
   * I2C to UDP Gateway (I2C_UDP_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
I2C_DETECT_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

enables automatic i2c bus IC detection, used by ecmd command "i2c detect"
and other.
==========================================================
I2C_DETECT_SUPPORT: I2C detection support
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_GENERIC_SUPPORT: I2C generic read/write support
  Provides for:
   * Add delays for slow devices (I2C_GENERIC_DELAYS)
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_GENERIC_DELAYS: Add delays for slow devices
  Provides for:
  Depends on: 
   * I2C generic read/write support (I2C_GENERIC_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_24CXX_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

I2C EEPROM Support e.g M24C32, M24C64
==========================================================
I2C_24CXX_SUPPORT: I2C EEPROM (24cxx) support
  Provides for:
   * EEPROM (24cxx) Filesystem (VFS_EEPROM_SUPPORT)
   * EEPROM (24cxx) Raw Access (VFS_EEPROM_RAW_SUPPORT)
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_LM75_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Digital Temperatur Sensor and Thermal Watchdog IC LM75 Support
==========================================================
I2C_LM75_SUPPORT: I2C LM75 temperature sensor
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_DS1631_SUPPORT: I2C DS1631 temperature sensor
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_DS13X7_SUPPORT: I2C DS13X7 RTC
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_PCF8583_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

PCF8583 realtime clock for I2C-bus
==========================================================
I2C_PCF8583_SUPPORT: I2C PCF8583 RTC
  Provides for:
   * Pin A0 on Vcc (I2C_PCF8583_A0_VCC)
   * Sync system clock (I2C_PCF8583_SYNC)
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_PCF8583_A0_VCC:

PCF8583 address selection
==========================================================
I2C_PCF8583_A0_VCC: Pin A0 on Vcc
  Provides for:
  Depends on: 
   * I2C PCF8583 RTC (I2C_PCF8583_SUPPORT)


============help text in doc/Configure.help:==============
I2C_PCF8583_SYNC:

Keep the system time in sync with the chip by adjusting
the tick counter in the middle of a second. This will
prevent flapping of the second.
==========================================================
I2C_PCF8583_SYNC: Sync system clock
  Provides for:
  Depends on: 
   * I2C PCF8583 RTC (I2C_PCF8583_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_TSL2550_SUPPORT: I2C TSL2550 light sensor
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_BMP085_SUPPORT:


Allows to read out absolute pressure and temperature from
Bosch BMP085 and BMP180 barometric pressure sensors.
==========================================================
I2C_BMP085_SUPPORT: I2C BMP085 barometric pressure sensor
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_BMP085_BAROCALC_SUPPORT:


Include calculation of height and pressure at NN based on the
international barometric formula. Requires floating point
calculations, don't enable this on systems with thight flash.
==========================================================
I2C_BMP085_BAROCALC_SUPPORT: BMP085 advanced barometric calculations
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_PCA9531_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

PCA9531 - 8-bit I2C LED dimmer Support for I2C-bus
==========================================================
I2C_PCA9531_SUPPORT: I2C PCA9531 8-bit LED dimmer
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_PCA9685_SUPPORT: I2C PCA9685 12-bit LED dimmer
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_PCF8574X_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

PCF8574 and PCF8574A Remote 8-bit I/O expander for I2C-bus
==========================================================
I2C_PCF8574X_SUPPORT: I2C PCF8574X Port extension
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_PCA9555_SUPPORT:

Depends on: 
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Enables support for the PCA9555 16-bit I2C Port extension
==========================================================
I2C_PCA9555_SUPPORT: I2C PCA9555 16bit Port extension
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
I2C_MAX7311_SUPPORT: I2C MAX7311 16bit port extension
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
I2C_UDP_SUPPORT:

Depends on:
 * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * UDP support (UDP_SUPPORT)
==========================================================
I2C_UDP_SUPPORT: I2C to UDP Gateway
  Provides for:
  Depends on: 
   * I2C Master Support (EXPERIMENTAL) (I2C_MASTER_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * UDP support (UDP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_I2C: I2C
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
ULTRASONIC_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

Support for ultrasonic distance sensors such as the SRF05.
==========================================================
ULTRASONIC_SUPPORT: Ultrasonic (EXPERIMENTAL)
  Provides for:
   * Ultrasonic Debug (DEBUG_ULTRASONIC)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
SRF05_SUPPORT:

Depends on:
 *  (UTRASONIC_SUPPORT)
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)

A simple time based ultrasonic sensor. Ethersex measures the
ping time and calculates the distance in centimeter.
==========================================================
SRF05_SUPPORT: SRF05
  Provides for:
  Depends on: 
   *  (UTRASONIC_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
DEBUG_ULTRASONIC:

Depends on:
 * Enable Debugging (DEBUG)
 * Ultrasonic (EXPERIMENTAL) (ULTRASONIC_SUPPORT)

Ultrasonic sensor with 2 modes.

Mode 1 is a two signal mode (not yet implemented)
Mode 2 is a one signal mode, both start and stop signal done
by the same pin.

More details at:
http://www.rn-wissen.de/index.php/Sensorarten#Ultraschallsensor_SRF05
==========================================================
DEBUG_ULTRASONIC: Ultrasonic Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Ultrasonic (EXPERIMENTAL) (ULTRASONIC_SUPPORT)


============help text in doc/Configure.help:==============
CAMERA_SUPPORT:

Depends on:

Enables generic camera hardware support.
==========================================================
CAMERA_SUPPORT: Camera support (EXPERIMENTAL)
  Provides for:
   * DC3840 Serial camera (DC3840_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
DC3840_SUPPORT:

Depends on:
 * Camera support (EXPERIMENTAL) (CAMERA_SUPPORT)

Serial Philips DC3840 Support
==========================================================
DC3840_SUPPORT: DC3840 Serial camera
  Provides for:
   * Inline Camera (CAMERA_INLINE_SUPPORT)
   * DC3840 Camera (VFS_DC3840_SUPPORT)
   * DC3840 UDP Debug (DC3840_UDP_DEBUG)
  Depends on: 
   * Camera support (EXPERIMENTAL) (CAMERA_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DC3840_UDP_DEBUG: DC3840 UDP Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * DC3840 Serial camera (DC3840_SUPPORT)


============help text in doc/Configure.help:==============
FS20_SUPPORT:


Add support for ELV FS20 protocol.
For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.
==========================================================
FS20_SUPPORT: FS20 RF-control
  Provides for:
   * FS20 Send (FS20_SEND_SUPPORT)
   * FHT Send (FHT_SEND_SUPPORT)
   * FS20/FHT Recieve (FS20_RECEIVE_SUPPORT)
   * FS20 Receive (DEBUG_FS20_REC)
   * FS20 (RFM12_ASK_FS20_SUPPORT)
   * FHT (RFM12_ASK_FHT_SUPPORT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FS20_SEND_SUPPORT: FS20 Send
  Provides for:
  Depends on: 
   * FS20 RF-control (FS20_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FHT_SEND_SUPPORT: FHT Send
  Provides for:
  Depends on: 
   * FS20 RF-control (FS20_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FS20_RECEIVE_SUPPORT: FS20/FHT Recieve
  Provides for:
   * FS20/FHT Recieve: Send to server (FS20_RECEIVE_SENDER)
   * FS20 Recieve WS300 (FS20_RECEIVE_WS300_SUPPORT)
  Depends on: 
   * FS20 RF-control (FS20_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FS20_RECEIVE_SENDER: FS20/FHT Recieve: Send to server
  Provides for:
   * FS20 Receive Sender (DEBUG_FS20_SENDER)
  Depends on: 
   * FS20/FHT Recieve (FS20_RECEIVE_SUPPORT)
   * TCP support (TCP_SUPPORT)
   * DNS support (DNS_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
FS20_RECEIVE_WS300_SUPPORT: FS20 Recieve WS300
  Provides for:
  Depends on: 
   * FS20/FHT Recieve (FS20_RECEIVE_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_FS20_REC:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.
==========================================================
DEBUG_FS20_REC: FS20 Receive
  Provides for:
   * FS20 ECmd (DEBUG_ECMD_FS20)
   * FS20 Receive Sender (DEBUG_FS20_SENDER)
  Depends on: 
   * FS20 RF-control (FS20_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_ECMD_FS20:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_FS20: FS20 ECmd
  Provides for:
  Depends on: 
   * FS20 Receive (DEBUG_FS20_REC)


============help text in doc/Configure.help:==============
DEBUG_FS20_REC_QUEUE:

Depends on:
 * FS20 Receive (DEBUG_FS20_REC)

There's unfortunately no help available for this item.
For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.
==========================================================
DEBUG_FS20_REC_QUEUE: FS20 Receive Queue
  Provides for:
  Depends on: 
   * FS20 Receive (DEBUG_FS20_REC)


============help text in doc/Configure.help:==============
DEBUG_FS20_REC_VERBOSE:

Depends on:
 * FS20 Receive (DEBUG_FS20_REC)

There's unfortunately no help available for this item.
For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.
==========================================================
DEBUG_FS20_REC_VERBOSE: FS20 Receive Verbose
  Provides for:
  Depends on: 
   * FS20 Receive (DEBUG_FS20_REC)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_FS20_SENDER: FS20 Receive Sender
  Provides for:
  Depends on: 
   * FS20 Receive (DEBUG_FS20_REC)
   * FS20/FHT Recieve: Send to server (FS20_RECEIVE_SENDER)


============help text in doc/Configure.help:==============
DEBUG_FS20_WS300:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.
==========================================================
DEBUG_FS20_WS300: FS20 WS300
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
DEBUG_FS20_WS300_VERBOSE:

Depends on:
 * FS20 WS300 (DEBUG_FS20_WS300)

There's unfortunately no help available for this item.
For details see http://wiki.lochraster.org/wiki/Etherrape/Zusatzhardware/FS20.
==========================================================
DEBUG_FS20_WS300_VERBOSE: FS20 WS300 Verbose
  Provides for:
  Depends on: 
   * FS20 WS300 (DEBUG_FS20_WS300)


============help text in doc/Configure.help:==============
RFM12_IP_SUPPORT:

Depends on:
 * Networking support (UIP_SUPPORT)

RFM12 are cheap 433 MHz FSK-transmitters (i.e. wireless)

RFM12 are available from Pollin at
http://www.pollin.de/shop/detail.php?pg=NQ==&a=MDU5OTgxOTk=

For a step-by-step howto, see
http://ethersex.de/tiki-index.php?page=Ethersex%3AStepByStep%3ARFM12
==========================================================
RFM12_IP_SUPPORT: IP over RFM12 (FSK transmitter) support
  Provides for:
   * RFM12 raw (RFM12_RAW_SUPPORT)
   * Source Route ALL packets (RFM12_SOURCE_ROUTE_ALL)
   * RFM12 Packet Forwarding (RFM12_PCKT_FWD)
   * RFM12 ARP-Proxy (RFM12_ARP_PROXY)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CONF_RFM12_SLOW_SPI: Use slow SPI
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
CONF_RFM12B_SUPPORT: Use RFM12B
  Provides for:
  Depends on: 


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_SOURCE_ROUTE_ALL: Source Route ALL packets
  Provides for:
  Depends on: 
   * IP over RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_PCKT_FWD: RFM12 Packet Forwarding
  Provides for:
  Depends on: 
   * IP over RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_ARP_PROXY:

Depends on:
 * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
 * RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
RFM12_ARP_PROXY: RFM12 ARP-Proxy
  Provides for:
  Depends on: 
   * Ethernet (ENC28J60) support (ENC28J60_SUPPORT)
   * IP over RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_ASK_SUPPORT:

Depends on:
 * RFM12 (FSK transmitter) support (RFM12_IP_SUPPORT)

This ASK is very helpful for playing around with radio controlled
power switches or similar devices.
Due to the fact that the FM transmitting RFM12 chip is just turned
on or off, the modulation is ASK.
==========================================================
RFM12_ASK_SUPPORT: RFM12 ASK
  Provides for:
   * Inline RFM12 (RFM12_INLINE_SUPPORT)
   * Output RFM12 ASK (CW_RFM12_ASK_SUPPORT)
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * Pollin/Kangtai Powerswitch (IC 2272) (RFM12_ASK_2272_SUPPORT)
   * Pollin Powerswitch buried (IC 1527) (RFM12_ASK_1527_SUPPORT)
   * Tevion Powerswitch (RFM12_ASK_TEVION_SUPPORT)
   * Intertechno ITS-150 (RFM12_ASK_INTERTECHNO_SUPPORT)
   * External filter (RFM12_ASK_EXTERNAL_FILTER_SUPPORT)
   * 868MHz (RFM12_ASK_868_SUPPORT)
   * FS20 (RFM12_ASK_FS20_SUPPORT)
   * FHT (RFM12_ASK_FHT_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_ASK_433_SUPPORT: 433MHz
  Provides for:
   * Pollin/Kangtai Powerswitch (IC 2272) (RFM12_ASK_2272_SUPPORT)
   * Pollin Powerswitch buried (IC 1527) (RFM12_ASK_1527_SUPPORT)
   * Tevion Powerswitch (RFM12_ASK_TEVION_SUPPORT)
   * Intertechno ITS-150 (RFM12_ASK_INTERTECHNO_SUPPORT)
   * External filter (RFM12_ASK_EXTERNAL_FILTER_SUPPORT)
   * Sensing (RFM12_ASK_SENSING_SUPPORT)
  Depends on: 
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_ASK_2272_SUPPORT:

Depends on: 
 * RFM12 frequency (RFM12_FREQ_433920)
 * RFM12 ASK (RFM12_ASK_SUPPORT)
 * RFM12 ASK send (RFM12_ASK_SENDER_SUPPORT)

Several hardware stores and Pollin also distribute a so-called
Funkschaltset consisting of a wireless remote control and radio
outlets 3-5.

The sockets are configurable via ten dipswitches. The remote control
house code can be set via DIP five switches. This code is taken from
the outlets. The remaining five dip switches are then available for
the five different outlets

RFM12 frequency has to be set to 422.920MHz..
==========================================================
RFM12_ASK_2272_SUPPORT: Pollin/Kangtai Powerswitch (IC 2272)
  Provides for:
  Depends on: 
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_ASK_1527_SUPPORT: Pollin Powerswitch buried (IC 1527)
  Provides for:
  Depends on: 
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_ASK_TEVION_SUPPORT: Tevion Powerswitch
  Provides for:
  Depends on: 
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_ASK_INTERTECHNO_SUPPORT: Intertechno ITS-150
  Provides for:
  Depends on: 
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_ASK_EXTERNAL_FILTER_SUPPORT:

Depends on:
 * RFM12 ASK (Amplitude Shift Keying) Support

External filter enables to listen to the received audio signal
at PIN4 of the RFM12 device.
==========================================================
RFM12_ASK_EXTERNAL_FILTER_SUPPORT: External filter
  Provides for:
   * Sensing (RFM12_ASK_SENSING_SUPPORT)
  Depends on: 
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_ASK_SENSING_SUPPORT: Sensing
  Provides for:
   * Sensing (DEBUG_ASK_SENSE)
  Depends on: 
   * 433MHz (RFM12_ASK_433_SUPPORT)
   * External filter (RFM12_ASK_EXTERNAL_FILTER_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
RFM12_ASK_868_SUPPORT: 868MHz
  Provides for:
   * FS20 (RFM12_ASK_FS20_SUPPORT)
   * FHT (RFM12_ASK_FHT_SUPPORT)
  Depends on: 
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_ASK_FS20_SUPPORT:

Depends on: 
 * RFM12 frequency (RFM12_FREQ_868300)
 * RFM12 ASK (RFM12_ASK_SUPPORT)
 * RFM12 ASK send (RFM12_ASK_SENDER_SUPPORT)

Send FS20 commands.

RFM12 frequency has to be set to 868.300MHz.

FS20 on the air protokoll is described here
http://fhz4linux.info/tiki-index.php?page=FS20+Protocol
==========================================================
RFM12_ASK_FS20_SUPPORT: FS20
  Provides for:
   * FHT (RFM12_ASK_FHT_SUPPORT)
  Depends on: 
   * 868MHz (RFM12_ASK_868_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
RFM12_ASK_FHT_SUPPORT:

Depends on: 
 * RFM12 frequency (RFM12_FREQ_868300)
 * RFM12 ASK (RFM12_ASK_SUPPORT)
 * RFM12 ASK send (RFM12_ASK_SENDER_SUPPORT)
 * FS20 (RFM12_ASK_FS20_SUPPORT)

Send FHT commands.

RFM12 frequency has to be set to 868.300MHz.

FHT on the air protokoll is described here
http://fhz4linux.info/tiki-index.php?page=FHT+protocol
==========================================================
RFM12_ASK_FHT_SUPPORT: FHT
  Provides for:
  Depends on: 
   * FS20 (RFM12_ASK_FS20_SUPPORT)
   * 868MHz (RFM12_ASK_868_SUPPORT)
   * RFM12 ASK (RFM12_ASK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_ASK_SENSE: Sensing
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Sensing (RFM12_ASK_SENSING_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
PSB2186_SUPPORT: PSB2186 (ISDN) D-channel controller (EXPERIMENTAL)
  Provides for:
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
ONEWIRE_SUPPORT:

Add support for Dallas 1-wire.
==========================================================
ONEWIRE_SUPPORT: Onewire support
  Provides for:
   * Inline OneWire (ONEWIRE_INLINE_SUPPORT)
   * OneWire Temperature Support (LOME6_ONEWIRE_SUPPORT)
   * Onewire device detection support (ONEWIRE_DETECT_SUPPORT)
   * Onewire DS2502 (eeprom) support (ONEWIRE_DS2502_SUPPORT)
   * Onewire DS2450 (4 channel ADC) support (ONEWIRE_DS2450_SUPPORT)
   * Onewire Polling (ONEWIRE_POLLING_SUPPORT)
   * Onewire naming support (ONEWIRE_NAMING_SUPPORT)
   * Onewire ROM parsing (ECMD) (DEBUG_ECMD_OW_ROM)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
ONEWIRE_DETECT_SUPPORT:

Add support for automatic 1-wire device detection, i.e. scan
bus for attached devices.
==========================================================
ONEWIRE_DETECT_SUPPORT: Onewire device detection support
  Provides for:
   * Onewire device ECMD detection support (ONEWIRE_DETECT_ECMD_SUPPORT)
   * Onewire Polling (ONEWIRE_POLLING_SUPPORT)
   * Onewire device detection (ECMD) (DEBUG_ECMD_OW_LIST)
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)


============help text in doc/Configure.help:==============
ONEWIRE_DS2502_SUPPORT:

Support DS2502 1-wire EEPROMs.
==========================================================
ONEWIRE_DS2502_SUPPORT: Onewire DS2502 (eeprom) support
  Provides for:
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ONEWIRE_DS2450_SUPPORT: Onewire DS2450 (4 channel ADC) support
  Provides for:
   * Onewire DS2450 (core) (DEBUG_OW_DS2450_CORE)
   * Onewire DS2450 (ECMD) (DEBUG_OW_DS2450_ECMD)
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ONEWIRE_DETECT_ECMD_SUPPORT: Onewire device ECMD detection support
  Provides for:
  Depends on: 
   * Onewire device detection support (ONEWIRE_DETECT_SUPPORT)


============help text in doc/Configure.help:==============
ONEWIRE_POLLING_SUPPORT:

Depends on: 
 * Onewire support (ONEWIRE_SUPPORT)
 * Onewire device detection support (ONEWIRE_DETECT_SUPPORT)

If enabled, ethersex will run a discovery every OW_DISCOVER_DELAY*0.8 seconds. 
After the discovery, new sensors will be added to the list and old/defect sensors 
will be removed from the list.
Each sensor discovered will then be polled every OW_READ_DELAY*0.8 seconds and the temperature 
stored (cached). The advantage of this feature is that onewire opererates without 
any noticeable lags (compared to the 800 ms lag in normal operation mode). Also it is easier to have 
multiple applications requesting sensor information since more request will not increase traffic on the 
onewire bus.
The cons include higher memory consumption and a certain delay (max. OW_READ_DELAY*0.8s)
==========================================================
ONEWIRE_POLLING_SUPPORT: Onewire Polling
  Provides for:
   * ECMD 1w list with values (ONEWIRE_ECMD_LIST_VALUES_SUPPORT)
   * Onewire SNMP support (ONEWIRE_SNMP_SUPPORT)
   * Onewire Polling (DEBUG_OW_POLLING)
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)
   * Onewire device detection support (ONEWIRE_DETECT_SUPPORT)


============help text in doc/Configure.help:==============
ONEWIRE_ECMD_LIST_VALUES_SUPPORT:

Depends on:
 * Onewire support (ONEWIRE_SUPPORT)
 * Onewire polling support (ONEWIRE_POLLING_SUPPORT)

Show values (currently only temperature) on "1w list" command. This saves successive calls to get the
value for each sensor. Fields are separated by tab. 
==========================================================
ONEWIRE_ECMD_LIST_VALUES_SUPPORT: ECMD 1w list with values
  Provides for:
  Depends on: 
   * Onewire Polling (ONEWIRE_POLLING_SUPPORT)


============help text in doc/Configure.help:==============
ONEWIRE_NAMING_SUPPORT:

Depends on:
 * Onewire support (ONEWIRE_SUPPORT)

Enable mapping of onewire rom addresses to names. Mapping table is stored in EEPROM and could be edited
by ECMD commands:

1w name list: Show current mapping table
1w name set ID DEVICE NAME: Set table row ID to rom address DEVICE and name NAME
1w name clear ID: Clear table row ID
1w name save: Write current mapping table to EEPROM

"1w list" shows the rom addresses together with the names (separated by tab).

Number of table rows is defined by "Maximum sensor count" (OW_SENSORS_COUNT).
==========================================================
ONEWIRE_NAMING_SUPPORT: Onewire naming support
  Provides for:
  Depends on: 
   * Onewire support (ONEWIRE_SUPPORT)


============help text in doc/Configure.help:==============
ONEWIRE_SNMP_SUPPORT:

Depends on:
 * Onewire support (ONEWIRE_SUPPORT)
 * Onewire polling support (ONEWIRE_POLLING_SUPPORT)
 * SNMP Support (SNMP_SUPPORT)

Make the onewire values (currently only temperature) available via SNMP. The main OID is
.1.3.6.1.4.1.2021.13.23.3.

Sub-OIDs:
.1.3.6.1.4.1.2021.13.23.3.1.<ID>: rom address
.1.3.6.1.4.1.2021.13.23.3.2.<ID>: mapped name (with ONEWIRE_NAMING_SUPPORT)
.1.3.6.1.4.1.2021.13.23.3.3.<ID>: temperature value
.1.3.6.1.4.1.2021.13.23.3.4.<ID>: last discovery state (0 = absent, 1 = present)

ID corresponds with the ID of the name mapping table.
==========================================================
ONEWIRE_SNMP_SUPPORT: Onewire SNMP support
  Provides for:
  Depends on: 
   * Simple Network Managment Protocol support (snmp) (SNMP_SUPPORT)
   * Onewire Polling (ONEWIRE_POLLING_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_ECMD_OW_ROM:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_OW_ROM: Onewire ROM parsing (ECMD)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Onewire support (ONEWIRE_SUPPORT)


============help text in doc/Configure.help:==============
DEBUG_ECMD_OW_LIST:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_ECMD_OW_LIST: Onewire device detection (ECMD)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Onewire device detection support (ONEWIRE_DETECT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_OW_DS2450_CORE: Onewire DS2450 (core)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Onewire DS2450 (4 channel ADC) support (ONEWIRE_DS2450_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_OW_DS2450_ECMD: Onewire DS2450 (ECMD)
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Onewire DS2450 (4 channel ADC) support (ONEWIRE_DS2450_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_OW_POLLING: Onewire Polling
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * Onewire Polling (ONEWIRE_POLLING_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HBRIDGE_SUPPORT: H-Bridge (EXPERIMENTAL)
  Provides for:
   * enable with PWM (HBRIDGE_PWM_SUPPORT)
   * dual hbridge (DUAL_HBRIDGE_SUPPORT)
   * share enable line (SHARE_ENABLE_HBRIDGE_SUPPORT)
   * use inverter IC (HBRIDGE_INVERTER_SUPPORT)
   * H-Bridge Debug (DEBUG_HBRIDGE)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HBRIDGE_PWM_SUPPORT: enable with PWM
  Provides for:
  Depends on: 
   * H-Bridge (EXPERIMENTAL) (HBRIDGE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DUAL_HBRIDGE_SUPPORT: dual hbridge
  Provides for:
   * share enable line (SHARE_ENABLE_HBRIDGE_SUPPORT)
  Depends on: 
   * H-Bridge (EXPERIMENTAL) (HBRIDGE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
SHARE_ENABLE_HBRIDGE_SUPPORT: share enable line
  Provides for:
  Depends on: 
   * dual hbridge (DUAL_HBRIDGE_SUPPORT)
   * H-Bridge (EXPERIMENTAL) (HBRIDGE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HBRIDGE_INVERTER_SUPPORT: use inverter IC
  Provides for:
  Depends on: 
   * H-Bridge (EXPERIMENTAL) (HBRIDGE_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_HBRIDGE: H-Bridge Debug
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * H-Bridge (EXPERIMENTAL) (HBRIDGE_SUPPORT)


============help text in doc/Configure.help:==============
SMS_SUPPORT:

	module for interfacing ecmd via sms.
	some mobiles provide serial connection,
	by what they can be attached to the ethersex.

	this module has been tested with:
		* siemens me45
		* siemens mt50
==========================================================
SMS_SUPPORT: SMS Support
  Provides for:
   * SMS (ECMD_SMS_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_SMS: SMS
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


============help text in doc/Configure.help:==============
HC595_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
HC595_SUPPORT: HC595 output expansion
  Provides for:
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)


============help text in doc/Configure.help:==============
HC165_SUPPORT:

Depends on:
 * Prompt for experimental code (CONFIG_EXPERIMENTAL)
 * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
HC165_SUPPORT: HC165 input expansion  (EXPERIMENTAL)
  Provides for:
   * Inverse output (HC165_INVERSE_OUTPUT)
  Depends on: 
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)
   * Full-featured I/O abstraction model (Port I/O) (PORTIO_SUPPORT)


============help text in doc/Configure.help:==============
HC165_INVERSE_OUTPUT:

Depends on:
 * HC165 support (HC165_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
HC165_INVERSE_OUTPUT: Inverse output
  Provides for:
  Depends on: 
   * HC165 input expansion (EXPERIMENTAL) (HC165_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HD44780_SUPPORT: HD44780 module driver (Character-LCD)
  Provides for:
   * HD44780 Output (TTY_LL_HD44780)
   * Readback support (HD44780_READBACK)
   * Multiple ENABLE support (HD44780_MULTIENSUPPORT)
   * Backlight support (HD44780_BACKLIGHT_SUPPORT)
   * Readback support (HD44780_READBACK)
   * Invert Backlight switch (HD44780_BACKLIGHT_INV)
   * HD44780 (DEBUG_HD44780)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
HD44780_READBACK:

Depends on:
 * HD44780 module driver (HD44780_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
HD44780_READBACK: Readback support
  Provides for:
  Depends on: 
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HD44780_MULTIENSUPPORT: Multiple ENABLE support
  Provides for:
  Depends on: 
   *  (HD44780_DIREKT)
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)


============help text in doc/Configure.help:==============
HD44780_BACKLIGHT_SUPPORT:


Backlight support for HD44780 LCD with direct connection.
==========================================================
HD44780_BACKLIGHT_SUPPORT: Backlight support
  Provides for:
  Depends on: 
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)


============help text in doc/Configure.help:==============
HD44780_READBACK:

Depends on:
 * HD44780 module driver (HD44780_SUPPORT)

There's unfortunately no help available for this item.
==========================================================
HD44780_READBACK: Readback support
  Provides for:
  Depends on: 
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HD44780_BACKLIGHT_INV: Invert Backlight switch
  Provides for:
  Depends on: 
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_LCD_SUPPORT: HR20-style LCD Display without ECMD (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (atmega169)
   *  (EXPERIMENTAL_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_LCD_SUPPORT_FULL: HR20-style LCD Display (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (atmega169)
   *  (EXPERIMENTAL_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
S1D15G10_SUPPORT: S1D15G10 module driver (130x130-R/G/B-LCD)
  Provides for:
   * S1D15G10 Output (TTY_LL_S1D15G10)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ST7626_SUPPORT: ST7626 module driver (98x67-R/G/B-LCD)
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
DEBUG_HD44780:

Depends on:
 * Enable (Serial-Line) Debugging (DEBUG)

There's unfortunately no help available for this item.
==========================================================
DEBUG_HD44780: HD44780
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * HD44780 module driver (Character-LCD) (HD44780_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_LCD_MENU: LCD Menu
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   *  (LCD_MENU_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
S1D13305_SUPPORT: S1D13305 module driver (GLCD)
  Provides for:
   * S1D13305 Output (TTY_LL_S1D13305)
   * S1D13305 Output (GLCDMENU_S1D13305)
   * S1D13305 (DEBUG_S1D13305)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_S1D13305: S1D13305
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)
   * S1D13305 module driver (GLCD) (S1D13305_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ADC_LIGHT: ADC light input
  Provides for:
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_TEMP_SUPPORT: HR20-style Temperature Sensor (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (CONFIG_ADC_AVCC)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
ADC_SUPPORT:

Enable ADC abstraction layer.  This especially enables a further
ECMD 'adc get' which triggers a ADC conversion for each channel
and returns the gained values (if ECMD support is enabled).
==========================================================
ADC_SUPPORT: ADC input
  Provides for:
   * Inline ADC (ADC_INLINE_SUPPORT)
   * ADC voltage support (ADC_VOLTAGE_SUPPORT)
   * KTY Calculation Support (KTY_SUPPORT)
  Depends on: 
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
HR20_TEMP_SUPPORT: HR20-style Temperature Sensor (EXPERIMENTAL)
  Provides for:
  Depends on: 
   *  (CONFIG_ADC_AVCC)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
ADC_VOLTAGE_SUPPORT:

Depends on:
 * ADC input (ADC_SUPPORT)

Enables the direct readout of ADC in volt. A VREF calibration value
can be set by ECMD and is stored in EEPROM.
==========================================================
ADC_VOLTAGE_SUPPORT: ADC voltage support
  Provides for:
   * Tank level meter (TANKLEVEL_SUPPORT)
  Depends on: 
   * ADC input (ADC_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
KTY_SUPPORT:

Depends on:
 * ADC input (ADC_SUPPORT)

Add support for KTY temperature sensors, connected to ADC pins.
This results in a further ecmd 'kty get 0', 'kty get 1', etc.

For hardware layout and further howto, look at
http://ethersex.de/tiki-index.php?page=KtyTemperatur
==========================================================
KTY_SUPPORT: KTY Calculation Support
  Provides for:
   * Inline KTY (KTY_INLINE_SUPPORT)
  Depends on: 
   * ADC input (ADC_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
ADS7822_SUPPORT: ADS7822 12bit ADC
  Provides for:
  Depends on: 
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
MCUF_SUPPORT:

Depends on:
 * UDP support (UDP_SUPPORT)

Enables UDP-Blinkenlights-Streams reciever on Port 2323

Supported proctocols:
  BLP
  EBLP
  MCUF

For Details see https://wiki.blinkenarea.org/index.php/Protocols

To use the incomming data, you have to enable
  MCUF usart
and/or

  BlinkenLightsPro
or
  LED-Module16x16rg


Use "MCUF usart" to send Data over USART 0 or 1 for example to a
Shifter (see https://wiki.blinkenarea.org/index.php/Shifter). If
you want to use "MCUF usart", you also have to select the USART
in the field "MCUF usart select".

Use "BlinkenLightsPro" if you have a BlinkenLedsPro or compatible
Hardware directly connected to your microcontroller.
See https://wiki.blinkenarea.org/index.php/BlinkenLEDs for
Details.

For "LED-Module16x16rg" and further information on "Blinkenlights
- MicroControllerUnitFrame" see
http://www.ethersex.de/tiki-index.php?page=Blinkenlights+MCUF
==========================================================
MCUF_SUPPORT: Blinkenlights - MicroControllerUnitFrame
  Provides for:
   * MCUF usart (MCUF_SERIAL_SUPPORT)
   * MCUF output (MCUF_OUTPUT_SUPPORT)
   * Workaround for MCUF-UDP-Packets with wrong max-value (MCUF_SERIAL_WORKAROUND_FOR_BAD_MCUF_UDP_PACKETS)
   * MCUF Scrolltext (MCUF_SCROLLTEXT_SUPPORT)
   * MCUF Clock (MCUF_CLOCK_SUPPORT)
   * Clock autostart (MCUF_CLOCK_AUTOSTART_SUPPORT)
   * MCUF Module (MCUF_MODUL_SUPPORT)
   * MCUF Module in Cron (MCUF_MODUL_CRON_SUPPORT)
   * MCUF Module Display Mode (MCUF_MODUL_DISPLAY_MODE_SUPPORT)
   * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)
  Depends on: 
   * UDP support (UDP_SUPPORT)
   *  (ARCH_AVR)


============help text in doc/Configure.help:==============
MCUF_SERIAL_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

Converts and sends incomming UDP-Blinkenlights-Streams to the
selected USART 0 or 1 for example to a Shifter
(see https://wiki.blinkenarea.org/index.php/Shifter). You have
to select the USART in the field "MCUF usart select".
==========================================================
MCUF_SERIAL_SUPPORT: MCUF usart
  Provides for:
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_OUTPUT_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

Use "BlinkenLightsPro" if you have a BlinkenLedsPro or compatible
Hardware directly connected to your microcontroller.
See https://wiki.blinkenarea.org/index.php/BlinkenLEDs for
Details.

Use "LED-Module16x16rg" for Toshiba tlmm501b2 or compatible
Hardware.

Use add-hardwarebrocken.sh to configure pinning.

See also
http://www.ethersex.de/tiki-index.php?page=Blinkenlights+MCUF
==========================================================
MCUF_OUTPUT_SUPPORT: MCUF output
  Provides for:
   * MCUF Module (MCUF_MODUL_SUPPORT)
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_SERIAL_WORKAROUND_FOR_BAD_MCUF_UDP_PACKETS:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

Enable this to scan packet to determine maxvalue (workaround for
some stupid programms that don't send eblp according to
https://wiki.blinkenarea.org/index.php/ExtendedBlinkenlightsProtocol
but use 1 as maxvaule instead of 255)
==========================================================
MCUF_SERIAL_WORKAROUND_FOR_BAD_MCUF_UDP_PACKETS: Workaround for MCUF-UDP-Packets with wrong max-value
  Provides for:
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_SCROLLTEXT_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

Enables startup-message and ecmd "mcuf showstring [YOUR STRING]".
Max length of [YOUR STRING] is 31 chars.
==========================================================
MCUF_SCROLLTEXT_SUPPORT: MCUF Scrolltext
  Provides for:
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_CLOCK_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
 * System clock support (CLOCK_SUPPORT)

Display current date and time using ecmd "mcuf showclock".

"mcuf showclock 0" (default) displays date and time using
scrolltext.
"mcuf showclock 1" displays only time without scrolling with
blinking dots in the middle.
"mcuf showclock 2" displays the time without the dots.

If "Cron daemon" is also enabled, the time will be displayed
as long as no other data for the display is avail (e.g. from
mcuf-udp or ecmd "mcuf showstring").
==========================================================
MCUF_CLOCK_SUPPORT: MCUF Clock
  Provides for:
   * Clock autostart (MCUF_CLOCK_AUTOSTART_SUPPORT)
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
   * System clock support (CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MCUF_CLOCK_AUTOSTART_SUPPORT: Clock autostart
  Provides for:
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
   * System clock support (CLOCK_SUPPORT)
   * MCUF Clock (MCUF_CLOCK_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
MCUF_MODUL_SUPPORT: MCUF Module
  Provides for:
   * Inline MCUF (MCUF_INLINE_SUPPORT)
   * MCUF Game Input Test (MCUF_TEST_GAME_INPUT)
   * MCUF Chess (MCUF_CHESS_SUPPORT)
   * MCUF Box (MCUF_BOX_SUPPORT)
   * MCUF Clean (MCUF_CLEAN_SUPPORT)
   * MCUF Spiral (MCUF_SPIRAL_SUPPORT)
   * MCUF Image (MCUF_IMAGE_SUPPORT)
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
   * MCUF output (MCUF_OUTPUT_SUPPORT)
   * Prompt for experimental code (CONFIG_EXPERIMENTAL)


============help text in doc/Configure.help:==============
MCUF_MODUL_CRON_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
 * Cron static daemon (CRON_STATIC_SUPPORT)

Set mode for modul call in cron.

* random   - selects randomly one module and plays until its end
* sequence - starts at each cron call one module after the other
==========================================================
MCUF_MODUL_CRON_SUPPORT: MCUF Module in Cron
  Provides for:
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
   * Cron daemon (Static) (CRON_STATIC_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_MODUL_DISPLAY_MODE_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
 * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)

Set default call mode to start any modul for ECMD.

Possible choice:
* manual   - enter the modul number
* random   - start a random module
* sequence - start the next module
==========================================================
MCUF_MODUL_DISPLAY_MODE_SUPPORT: MCUF Module Display Mode
  Provides for:
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)
   * ECMD (Ethersex Command) support (ECMD_PARSER_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_TEST_GAME_INPUT:

Depends on:
 * MCUF Module (MCUF_MODUL_SUPPORT)
 * Game Input (GAME_INPUT_SUPPORT)

Little Test Screen for Game Input Support
==========================================================
MCUF_TEST_GAME_INPUT: MCUF Game Input Test
  Provides for:
  Depends on: 
   * MCUF Module (MCUF_MODUL_SUPPORT)
   * Game Input (GAME_INPUT_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_CHESS_SUPPORT:

Depends on:
 * MCUF Module (MCUF_MODUL_SUPPORT)

Example module to display some chess like screen
==========================================================
MCUF_CHESS_SUPPORT: MCUF Chess
  Provides for:
  Depends on: 
   * MCUF Module (MCUF_MODUL_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_BOX_SUPPORT:

Depends on:
 * MCUF Module (MCUF_MODUL_SUPPORT)

Example to display a box.
==========================================================
MCUF_BOX_SUPPORT: MCUF Box
  Provides for:
  Depends on: 
   * MCUF Module (MCUF_MODUL_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_CLEAN_SUPPORT:

Depends on:
 * MCUF Module (MCUF_MODUL_SUPPORT)

Example module to clean the screen
==========================================================
MCUF_CLEAN_SUPPORT: MCUF Clean
  Provides for:
  Depends on: 
   * MCUF Module (MCUF_MODUL_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_SPIRAL_SUPPORT:

Depends on:
 * MCUF Module (MCUF_MODUL_SUPPORT)

Example of multi color/bright spiral movement screen
==========================================================
MCUF_SPIRAL_SUPPORT: MCUF Spiral
  Provides for:
  Depends on: 
   * MCUF Module (MCUF_MODUL_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_IMAGE_SUPPORT:

Depends on:
 * MCUF Module (MCUF_MODUL_SUPPORT)

Display an image stored in /mcuf/image/image.h
==========================================================
MCUF_IMAGE_SUPPORT: MCUF Image
  Provides for:
  Depends on: 
   * MCUF Module (MCUF_MODUL_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_MODUL_BORG16_SUPPORT:

Depends on:
 * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)

Modules made originaly for http://www.das-labor.org/wiki/Borg16 hardware.
==========================================================
MCUF_MODUL_BORG16_SUPPORT: MCUF Module Borg-16
  Provides for:
   * MCUF Xoni Study1 (MCUF_MODUL_BORG16_XONI_STUDY_SUPPORT)
   * MCUF Snake (MCUF_MODUL_BORG16_SNAKE_SUPPORT)
   * MCUF Snake Interactive (MCUF_MODUL_BORG16_SNAKE_INTERACTIVE_SUPPORT)
  Depends on: 
   * Blinkenlights - MicroControllerUnitFrame (MCUF_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_MODUL_BORG16_XONI_STUDY_SUPPORT:

Depends on:
 * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)

A short snake runs up and down every line of the display for several times.
==========================================================
MCUF_MODUL_BORG16_XONI_STUDY_SUPPORT: MCUF Xoni Study1
  Provides for:
  Depends on: 
   * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_MODUL_BORG16_SNAKE_SUPPORT:

Depends on:
 * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)

The Computer plays Snake against itself.
==========================================================
MCUF_MODUL_BORG16_SNAKE_SUPPORT: MCUF Snake
  Provides for:
  Depends on: 
   * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)


============help text in doc/Configure.help:==============
MCUF_MODUL_BORG16_SNAKE_INTERACTIVE_SUPPORT:

Depends on:
 * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)
 * Game Input (GAME_INPUT_SUPPORT)

Interactive edition of snake or tron
==========================================================
MCUF_MODUL_BORG16_SNAKE_INTERACTIVE_SUPPORT: MCUF Snake Interactive
  Provides for:
  Depends on: 
   * MCUF Module Borg-16 (MCUF_MODUL_BORG16_SUPPORT)
   * Game Input (GAME_INPUT_SUPPORT)


============help text in doc/Configure.help:==============
There is no help section.
==========================================================
DEBUG_MCUF: MCUF
  Provides for:
  Depends on: 
   * Enable Debugging (DEBUG)


